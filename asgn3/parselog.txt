   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7ff01b0fdf60> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7ff01b063488> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,24)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7ff01b063488>,None,'HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7ff01a630280> ({'class': None, 'id': 'HelloWorld', 'mod ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,24)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,31)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7ff01b0fdf60> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7ff01b063560> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,38)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7ff01b0a7120> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7ff01b063560>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7ff01b063560> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(VOID,'void',3,45)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { Modifiers VOID . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7ff01b0a7240> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7ff01b0a7240> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7ff01b0a7240> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 165
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,54)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ff01b0fdf60> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 76
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,54)
   yacc.py: 366:Action : Shift and goto state 173
   yacc.py: 337:
   yacc.py: 338:State  : 173
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',3,55)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a71e0> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7ff01b0a71e0> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',3,61)
   yacc.py: 366:Action : Shift and goto state 80
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',3,62)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 193
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 191
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 82
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ff01b0a7150> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7ff01a62c910> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7ff01a62c910>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7ff01c7c2368> ([{'type': None, 'name': 'args'}])
   yacc.py: 337:
   yacc.py: 338:State  : 254
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',3,68)
   yacc.py: 366:Action : Shift and goto state 321
   yacc.py: 337:
   yacc.py: 338:State  : 321
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',3,70)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7ff01c7c2368>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7ff01a628b40> ({'name': 'main', 'plist': [{'type': None ...)
   yacc.py: 337:
   yacc.py: 338:State  : 250
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,70)
   yacc.py: 366:Action : Shift and goto state 178
   yacc.py: 337:
   yacc.py: 338:State  : 178
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(CHAR,'char',16,250)
   yacc.py: 366:Action : Shift and goto state 57
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { CHAR . LexToken(IDENTIFIER,'grade',16,255)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> CHAR] with ['char'] and goto state 9
   yacc.py: 423:Result : <str @ 0x7ff01b0a7180> ('char')
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'grade',16,255)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['char'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7ff01b0a7180> ('char')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'grade',16,255)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['char'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7ff01b0a7180> ('char')
   yacc.py: 337:
   yacc.py: 338:State  : 128
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'grade',16,255)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(=,'=',16,261)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['grade'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ff01b0a7270> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 222
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(=,'=',16,261)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = . LexToken(CHAR_LITERAL,"'C'",16,263)
   yacc.py: 366:Action : Shift and goto state 93
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = CHAR_LITERAL . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [Char_LIT -> CHAR_LITERAL] with ["'C'"] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = Char_LIT . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Char_LIT] with [<dict @ 0x7ff01a628168>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ComplexPrimary . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a628168>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NotJustName . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a628168>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = PrimaryExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a628168>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = PostfixExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a628168>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = LogicalUnaryExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a628168>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = UnaryExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a628168>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = CastExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a628168>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = MultiplicativeExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a628168>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = AdditiveExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a628168>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ShiftExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a628168>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = RelationalExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a628168>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = EqualityExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a628168>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = AndExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a628168>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ExclusiveOrExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a628168>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = InclusiveOrExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a628168>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ConditionalAndExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a628168>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ConditionalOrExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a628168>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ConditionalExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a628168>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = AssignmentExpression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a628168>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = Expression . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [VariableInitializer -> Expression] with [<dict @ 0x7ff01a628168>] and goto state 61
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 255
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = VariableInitializer . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName = VariableInitializer] with ['grade','=',<dict @ 0x7ff01a628168>] and goto state 60
   yacc.py: 423:Result : <dict @ 0x7ff01a62e7f8> ({'type': 'char', 'name': 'grade'})
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',16,266)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7ff01a62e7f8>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7ff01a630910> ({'type': 'char'})
   yacc.py: 337:
   yacc.py: 338:State  : 221
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',16,266)
   yacc.py: 366:Action : Shift and goto state 299
   yacc.py: 337:
   yacc.py: 338:State  : 299
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(SWITCH,'switch',18,277)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a628168> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 340
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(SWITCH,'switch',18,277)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['char',<dict @ 0x7ff01a630910>,';',{'instr': 2}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7ff01a636a28> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(SWITCH,'switch',18,277)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7ff01a636a28> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 118
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(SWITCH,'switch',18,277)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ff01a636050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(SWITCH,'switch',18,277)
   yacc.py: 366:Action : Shift and goto state 130
   yacc.py: 337:
   yacc.py: 338:State  : 130
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH . LexToken((,'(',18,283)
   yacc.py: 366:Action : Shift and goto state 223
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( . LexToken(IDENTIFIER,'grade',18,284)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( IDENTIFIER . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['grade'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 186
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( QualifiedName . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['grade'] and goto state 138
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( PrimaryExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['grade'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( PostfixExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['grade'] and goto state 199
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( LogicalUnaryExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['grade'] and goto state 198
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( UnaryExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['grade'] and goto state 205
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( CastExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['grade'] and goto state 206
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( MultiplicativeExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['grade'] and goto state 210
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( AdditiveExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['grade'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( ShiftExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['grade'] and goto state 215
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( RelationalExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with ['grade'] and goto state 220
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( EqualityExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with ['grade'] and goto state 223
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( AndExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with ['grade'] and goto state 225
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( ExclusiveOrExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with ['grade'] and goto state 227
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( InclusiveOrExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with ['grade'] and goto state 229
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( ConditionalAndExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with ['grade'] and goto state 231
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( ConditionalOrExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with ['grade'] and goto state 234
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( ConditionalExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with ['grade'] and goto state 237
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( AssignmentExpression . LexToken(),')',18,289)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with ['grade'] and goto state 241
   yacc.py: 423:Result : <str @ 0x7ff01b0a70c0> ('grade')
   yacc.py: 337:
   yacc.py: 338:State  : 300
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression . LexToken(),')',18,289)
   yacc.py: 391:Action : Reduce rule [Mark_switch -> <empty>] with [] and goto state 111
   yacc.py: 462:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 341
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch . LexToken(),')',18,289)
   yacc.py: 366:Action : Shift and goto state 357
   yacc.py: 337:
   yacc.py: 338:State  : 357
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) . LexToken({,'{',19,299)
   yacc.py: 366:Action : Shift and goto state 69
   yacc.py: 337:
   yacc.py: 338:State  : 69
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) { . LexToken(CASE,'case',20,310)
   yacc.py: 389:Action : Reduce rule [Lparen -> {] with ['{'] and goto state 87
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 54
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen . LexToken(CASE,'case',20,310)
   yacc.py: 391:Action : Reduce rule [Marker_case -> <empty>] with [] and goto state 106
   yacc.py: 462:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case . LexToken(CASE,'case',20,310)
   yacc.py: 366:Action : Shift and goto state 188
   yacc.py: 337:
   yacc.py: 338:State  : 188
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE . LexToken(CHAR_LITERAL,"'A'",20,315)
   yacc.py: 366:Action : Shift and goto state 93
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE CHAR_LITERAL . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [Char_LIT -> CHAR_LITERAL] with ["'A'"] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE Char_LIT . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Char_LIT] with [<dict @ 0x7ff01a628168>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ComplexPrimary . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a628168>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE NotJustName . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a628168>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE PrimaryExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a628168>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE PostfixExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a628168>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE LogicalUnaryExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a628168>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 196
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE UnaryExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a628168>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE CastExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a628168>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE MultiplicativeExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a628168>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE AdditiveExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a628168>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ShiftExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a628168>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE RelationalExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a628168>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE EqualityExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a628168>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE AndExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a628168>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ExclusiveOrExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a628168>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE InclusiveOrExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a628168>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ConditionalAndExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a628168>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ConditionalOrExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a628168>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ConditionalExpression . LexToken(:,':',20,319)
   yacc.py: 389:Action : Reduce rule [ConstantExpression -> ConditionalExpression] with [<dict @ 0x7ff01a628168>] and goto state 242
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'type': 'char', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 264
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ConstantExpression . LexToken(:,':',20,319)
   yacc.py: 366:Action : Shift and goto state 323
   yacc.py: 337:
   yacc.py: 338:State  : 323
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Marker_case CASE ConstantExpression : . LexToken(IDENTIFIER,'System',21,333)
   yacc.py: 389:Action : Reduce rule [LabelStatement -> Marker_case CASE ConstantExpression :] with [None,'case',<dict @ 0x7ff01a628168>,':'] and goto state 104
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LabelStatement . LexToken(IDENTIFIER,'System',21,333)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a635280> ({'instr': 5})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LabelStatement M_instr . LexToken(IDENTIFIER,'System',21,333)
   yacc.py: 389:Action : Reduce rule [Statement -> LabelStatement M_instr] with [None,{'instr': 5}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen Statement . LexToken(IDENTIFIER,'System',21,333)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a6384b0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 118
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',21,333)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a6384b0>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',21,333)
   yacc.py: 366:Action : Shift and goto state 90
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',21,339)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a7210> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',21,339)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',21,340)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',21,343)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a7330> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',21,343)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',21,344)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',21,351)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a65a8> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',21,351)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7ff01b0a65a8>] and goto state 169
   yacc.py: 423:Result : <str @ 0x7ff01b0a65a8> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',21,351)
   yacc.py: 366:Action : Shift and goto state 206
   yacc.py: 337:
   yacc.py: 338:State  : 206
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"Excellent!"',21,352)
   yacc.py: 366:Action : Shift and goto state 159
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with ['"Excellent!"'] and goto state 156
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7ff01a62da28>] and goto state 147
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a62da28>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a62da28>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a62da28>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a62da28>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a62da28>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a62da28>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a62da28>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a62da28>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a62da28>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a62da28>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a62da28>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a62da28>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a62da28>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a62da28>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a62da28>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a62da28>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a62da28>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a62da28>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a62da28>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t4'})
   yacc.py: 337:
   yacc.py: 338:State  : 282
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',21,364)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7ff01a62da28>] and goto state 173
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'expr': [{'type': 'String', 'tempVar':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 281
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',21,364)
   yacc.py: 366:Action : Shift and goto state 330
   yacc.py: 337:
   yacc.py: 338:State  : 330
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7ff01b0a65a8>,'(',<dict @ 0x7ff01a638b40>,')'] and goto state 165
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 104
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 152
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7ff01a6387f8>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a6387f8>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a6387f8>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',21,365)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ff01a6387f8>] and goto state 107
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 84
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',21,365)
   yacc.py: 366:Action : Shift and goto state 181
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(BREAK,'break',22,380)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a638b40> ({'instr': 7})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(BREAK,'break',22,380)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ff01a6387f8>,';',{'instr': 7}] and goto state 96
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(BREAK,'break',22,380)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a62d6e0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(BREAK,'break',22,380)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a635c58>,<dict @ 0x7ff01a62d6e0>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(BREAK,'break',22,380)
   yacc.py: 366:Action : Shift and goto state 139
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements BREAK . LexToken(;,';',22,385)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements BREAK ; . LexToken(CASE,'case',23,396)
   yacc.py: 389:Action : Reduce rule [JumpStatement -> BREAK ;] with ['break',';'] and goto state 127
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements JumpStatement . LexToken(CASE,'case',23,396)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a62dd70> ({'instr': 8})
   yacc.py: 337:
   yacc.py: 338:State  : 218
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements JumpStatement M_instr . LexToken(CASE,'case',23,396)
   yacc.py: 389:Action : Reduce rule [Statement -> JumpStatement M_instr] with [None,{'instr': 8}] and goto state 99
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(CASE,'case',23,396)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a6384b0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(CASE,'case',23,396)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a62da28>,<dict @ 0x7ff01a6384b0>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(CASE,'case',23,396)
   yacc.py: 391:Action : Reduce rule [Marker_case -> <empty>] with [] and goto state 106
   yacc.py: 462:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case . LexToken(CASE,'case',23,396)
   yacc.py: 366:Action : Shift and goto state 188
   yacc.py: 337:
   yacc.py: 338:State  : 188
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE . LexToken(CHAR_LITERAL,"'B'",23,401)
   yacc.py: 366:Action : Shift and goto state 93
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CHAR_LITERAL . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [Char_LIT -> CHAR_LITERAL] with ["'B'"] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE Char_LIT . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Char_LIT] with [<dict @ 0x7ff01a62d6e0>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ComplexPrimary . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a62d6e0>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE NotJustName . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a62d6e0>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PrimaryExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PostfixExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE LogicalUnaryExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 196
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE UnaryExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CastExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE MultiplicativeExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AdditiveExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ShiftExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE RelationalExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE EqualityExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AndExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ExclusiveOrExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE InclusiveOrExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalAndExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalOrExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalExpression . LexToken(:,':',23,405)
   yacc.py: 389:Action : Reduce rule [ConstantExpression -> ConditionalExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 242
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 264
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression . LexToken(:,':',23,405)
   yacc.py: 366:Action : Shift and goto state 323
   yacc.py: 337:
   yacc.py: 338:State  : 323
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression : . LexToken(CASE,'case',24,416)
   yacc.py: 389:Action : Reduce rule [LabelStatement -> Marker_case CASE ConstantExpression :] with [None,'case',<dict @ 0x7ff01a62d6e0>,':'] and goto state 104
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement . LexToken(CASE,'case',24,416)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a6387f8> ({'instr': 11})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement M_instr . LexToken(CASE,'case',24,416)
   yacc.py: 389:Action : Reduce rule [Statement -> LabelStatement M_instr] with [None,{'instr': 11}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(CASE,'case',24,416)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a6384b0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(CASE,'case',24,416)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a635c58>,<dict @ 0x7ff01a6384b0>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(CASE,'case',24,416)
   yacc.py: 391:Action : Reduce rule [Marker_case -> <empty>] with [] and goto state 106
   yacc.py: 462:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case . LexToken(CASE,'case',24,416)
   yacc.py: 366:Action : Shift and goto state 188
   yacc.py: 337:
   yacc.py: 338:State  : 188
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE . LexToken(CHAR_LITERAL,"'C'",24,421)
   yacc.py: 366:Action : Shift and goto state 93
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CHAR_LITERAL . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [Char_LIT -> CHAR_LITERAL] with ["'C'"] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE Char_LIT . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Char_LIT] with [<dict @ 0x7ff01a62d6e0>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ComplexPrimary . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a62d6e0>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE NotJustName . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a62d6e0>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PrimaryExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PostfixExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE LogicalUnaryExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 196
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE UnaryExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CastExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE MultiplicativeExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AdditiveExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ShiftExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE RelationalExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE EqualityExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AndExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ExclusiveOrExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE InclusiveOrExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalAndExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalOrExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalExpression . LexToken(:,':',24,425)
   yacc.py: 389:Action : Reduce rule [ConstantExpression -> ConditionalExpression] with [<dict @ 0x7ff01a62d6e0>] and goto state 242
   yacc.py: 423:Result : <dict @ 0x7ff01a62d6e0> ({'type': 'char', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 264
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression . LexToken(:,':',24,425)
   yacc.py: 366:Action : Shift and goto state 323
   yacc.py: 337:
   yacc.py: 338:State  : 323
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression : . LexToken(IDENTIFIER,'System',25,439)
   yacc.py: 389:Action : Reduce rule [LabelStatement -> Marker_case CASE ConstantExpression :] with [None,'case',<dict @ 0x7ff01a62d6e0>,':'] and goto state 104
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement . LexToken(IDENTIFIER,'System',25,439)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a62da28> ({'instr': 14})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement M_instr . LexToken(IDENTIFIER,'System',25,439)
   yacc.py: 389:Action : Reduce rule [Statement -> LabelStatement M_instr] with [None,{'instr': 14}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'System',25,439)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a6384b0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a6384b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',25,439)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a628168>,<dict @ 0x7ff01a6384b0>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',25,439)
   yacc.py: 366:Action : Shift and goto state 90
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',25,445)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a7210> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',25,445)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',25,446)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',25,449)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a7300> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',25,449)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',25,450)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',25,457)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a6490> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',25,457)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7ff01b0a6490>] and goto state 169
   yacc.py: 423:Result : <str @ 0x7ff01b0a6490> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',25,457)
   yacc.py: 366:Action : Shift and goto state 206
   yacc.py: 337:
   yacc.py: 338:State  : 206
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"Well done"',25,458)
   yacc.py: 366:Action : Shift and goto state 159
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with ['"Well done"'] and goto state 156
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7ff01a62da28>] and goto state 147
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a62da28>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a62da28>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a62da28>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a62da28>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a62da28>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a62da28>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a62da28>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a62da28>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a62da28>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a62da28>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a62da28>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a62da28>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a62da28>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a62da28>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a62da28>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a62da28>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a62da28>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a62da28>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a62da28>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'type': 'String', 'tempVar': '_t9'})
   yacc.py: 337:
   yacc.py: 338:State  : 282
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',25,469)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7ff01a62da28>] and goto state 173
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'expr': [{'type': 'String', 'tempVar':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 281
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',25,469)
   yacc.py: 366:Action : Shift and goto state 330
   yacc.py: 337:
   yacc.py: 338:State  : 330
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7ff01b0a6490>,'(',<dict @ 0x7ff01a635c58>,')'] and goto state 165
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 104
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 152
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7ff01a638168>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a638168>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a638168>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a638168>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a638168>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a638168>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a638168>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a638168>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a638168>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a638168>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a638168>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a638168>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a638168>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a638168>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a638168>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a638168>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a638168>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a638168>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a638168>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a638168>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',25,470)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ff01a638168>] and goto state 107
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 84
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',25,470)
   yacc.py: 366:Action : Shift and goto state 181
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(BREAK,'break',26,484)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a635c58> ({'instr': 16})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(BREAK,'break',26,484)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ff01a638168>,';',{'instr': 16}] and goto state 96
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(BREAK,'break',26,484)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a638b40>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(BREAK,'break',26,484)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a635280>,<dict @ 0x7ff01a638b40>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(BREAK,'break',26,484)
   yacc.py: 366:Action : Shift and goto state 139
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements BREAK . LexToken(;,';',26,489)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements BREAK ; . LexToken(CASE,'case',27,500)
   yacc.py: 389:Action : Reduce rule [JumpStatement -> BREAK ;] with ['break',';'] and goto state 127
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements JumpStatement . LexToken(CASE,'case',27,500)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a6384b0> ({'instr': 17})
   yacc.py: 337:
   yacc.py: 338:State  : 218
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements JumpStatement M_instr . LexToken(CASE,'case',27,500)
   yacc.py: 389:Action : Reduce rule [Statement -> JumpStatement M_instr] with [None,{'instr': 17}] and goto state 99
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(CASE,'case',27,500)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a628168>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(CASE,'case',27,500)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a62da28>,<dict @ 0x7ff01a628168>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(CASE,'case',27,500)
   yacc.py: 391:Action : Reduce rule [Marker_case -> <empty>] with [] and goto state 106
   yacc.py: 462:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case . LexToken(CASE,'case',27,500)
   yacc.py: 366:Action : Shift and goto state 188
   yacc.py: 337:
   yacc.py: 338:State  : 188
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE . LexToken(CHAR_LITERAL,"'D'",27,505)
   yacc.py: 366:Action : Shift and goto state 93
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CHAR_LITERAL . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [Char_LIT -> CHAR_LITERAL] with ["'D'"] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE Char_LIT . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Char_LIT] with [<dict @ 0x7ff01a638b40>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ComplexPrimary . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a638b40>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE NotJustName . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a638b40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PrimaryExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a638b40>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PostfixExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a638b40>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE LogicalUnaryExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a638b40>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 196
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE UnaryExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a638b40>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CastExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a638b40>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE MultiplicativeExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a638b40>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AdditiveExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a638b40>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ShiftExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a638b40>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE RelationalExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a638b40>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE EqualityExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a638b40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AndExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a638b40>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ExclusiveOrExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a638b40>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE InclusiveOrExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a638b40>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalAndExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a638b40>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalOrExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a638b40>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalExpression . LexToken(:,':',27,509)
   yacc.py: 389:Action : Reduce rule [ConstantExpression -> ConditionalExpression] with [<dict @ 0x7ff01a638b40>] and goto state 242
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'char', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 264
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression . LexToken(:,':',27,509)
   yacc.py: 366:Action : Shift and goto state 323
   yacc.py: 337:
   yacc.py: 338:State  : 323
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression : . LexToken(IDENTIFIER,'System',28,523)
   yacc.py: 389:Action : Reduce rule [LabelStatement -> Marker_case CASE ConstantExpression :] with [None,'case',<dict @ 0x7ff01a638b40>,':'] and goto state 104
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement . LexToken(IDENTIFIER,'System',28,523)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a638168> ({'instr': 20})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement M_instr . LexToken(IDENTIFIER,'System',28,523)
   yacc.py: 389:Action : Reduce rule [Statement -> LabelStatement M_instr] with [None,{'instr': 20}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'System',28,523)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a628168>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',28,523)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a635280>,<dict @ 0x7ff01a628168>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a62dd70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',28,523)
   yacc.py: 366:Action : Shift and goto state 90
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',28,529)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a7330> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',28,529)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',28,530)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',28,533)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a71b0> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',28,533)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',28,534)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',28,541)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a65a8> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',28,541)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7ff01b0a65a8>] and goto state 169
   yacc.py: 423:Result : <str @ 0x7ff01b0a65a8> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',28,541)
   yacc.py: 366:Action : Shift and goto state 206
   yacc.py: 337:
   yacc.py: 338:State  : 206
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"You passed"',28,542)
   yacc.py: 366:Action : Shift and goto state 159
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with ['"You passed"'] and goto state 156
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7ff01a638168>] and goto state 147
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a638168>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a638168>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a638168>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a638168>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a638168>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a638168>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a638168>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a638168>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a638168>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a638168>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a638168>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a638168>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a638168>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a638168>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a638168>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a638168>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a638168>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a638168>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a638168>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'type': 'String', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 282
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',28,554)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7ff01a638168>] and goto state 173
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'expr': [{'type': 'String', 'tempVar':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 281
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',28,554)
   yacc.py: 366:Action : Shift and goto state 330
   yacc.py: 337:
   yacc.py: 338:State  : 330
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7ff01b0a65a8>,'(',<dict @ 0x7ff01a62da28>,')'] and goto state 165
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 104
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 152
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7ff01a6387f8>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a6387f8>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a6387f8>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',28,555)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ff01a6387f8>] and goto state 107
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 84
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',28,555)
   yacc.py: 366:Action : Shift and goto state 181
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(CASE,'case',29,566)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a62da28> ({'instr': 22})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(CASE,'case',29,566)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ff01a6387f8>,';',{'instr': 22}] and goto state 96
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(CASE,'case',29,566)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a635c58>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(CASE,'case',29,566)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a62dd70>,<dict @ 0x7ff01a635c58>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(CASE,'case',29,566)
   yacc.py: 391:Action : Reduce rule [Marker_case -> <empty>] with [] and goto state 106
   yacc.py: 462:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case . LexToken(CASE,'case',29,566)
   yacc.py: 366:Action : Shift and goto state 188
   yacc.py: 337:
   yacc.py: 338:State  : 188
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE . LexToken(CHAR_LITERAL,"'F'",29,571)
   yacc.py: 366:Action : Shift and goto state 93
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CHAR_LITERAL . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [Char_LIT -> CHAR_LITERAL] with ["'F'"] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE Char_LIT . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Char_LIT] with [<dict @ 0x7ff01a635280>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ComplexPrimary . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a635280>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE NotJustName . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a635280>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PrimaryExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a635280>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE PostfixExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a635280>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE LogicalUnaryExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a635280>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 196
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE UnaryExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a635280>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE CastExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a635280>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE MultiplicativeExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a635280>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AdditiveExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a635280>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ShiftExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a635280>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE RelationalExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a635280>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE EqualityExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a635280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE AndExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a635280>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ExclusiveOrExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a635280>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE InclusiveOrExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a635280>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalAndExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a635280>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalOrExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a635280>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConditionalExpression . LexToken(:,':',29,575)
   yacc.py: 389:Action : Reduce rule [ConstantExpression -> ConditionalExpression] with [<dict @ 0x7ff01a635280>] and goto state 242
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'char', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 264
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression . LexToken(:,':',29,575)
   yacc.py: 366:Action : Shift and goto state 323
   yacc.py: 337:
   yacc.py: 338:State  : 323
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Marker_case CASE ConstantExpression : . LexToken(IDENTIFIER,'System',30,589)
   yacc.py: 389:Action : Reduce rule [LabelStatement -> Marker_case CASE ConstantExpression :] with [None,'case',<dict @ 0x7ff01a635280>,':'] and goto state 104
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement . LexToken(IDENTIFIER,'System',30,589)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a6387f8> ({'instr': 25})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement M_instr . LexToken(IDENTIFIER,'System',30,589)
   yacc.py: 389:Action : Reduce rule [Statement -> LabelStatement M_instr] with [None,{'instr': 25}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'System',30,589)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a635c58>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a635c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',30,589)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a638168>,<dict @ 0x7ff01a635c58>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',30,589)
   yacc.py: 366:Action : Shift and goto state 90
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',30,595)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a73c0> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',30,595)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',30,596)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',30,599)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a7390> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',30,599)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',30,600)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',30,607)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a6618> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',30,607)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7ff01b0a6618>] and goto state 169
   yacc.py: 423:Result : <str @ 0x7ff01b0a6618> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',30,607)
   yacc.py: 366:Action : Shift and goto state 206
   yacc.py: 337:
   yacc.py: 338:State  : 206
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"Better try again"',30,608)
   yacc.py: 366:Action : Shift and goto state 159
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with [<str @ 0x7ff01b0a65a8>] and goto state 156
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7ff01a6387f8>] and goto state 147
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a6387f8>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a6387f8>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a6387f8>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'type': 'String', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 282
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',30,626)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7ff01a6387f8>] and goto state 173
   yacc.py: 423:Result : <dict @ 0x7ff01a62dd70> ({'expr': [{'type': 'String', 'tempVar':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 281
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',30,626)
   yacc.py: 366:Action : Shift and goto state 330
   yacc.py: 337:
   yacc.py: 338:State  : 330
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7ff01b0a6618>,'(',<dict @ 0x7ff01a62dd70>,')'] and goto state 165
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 104
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 152
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7ff01a638e88>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a638e88>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a638e88>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a638e88>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a638e88>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a638e88>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a638e88>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a638e88>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a638e88>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a638e88>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a638e88>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a638e88>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a638e88>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a638e88>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a638e88>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a638e88>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a638e88>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a638e88>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a638e88>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a638e88>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',30,627)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ff01a638e88>] and goto state 107
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 84
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',30,627)
   yacc.py: 366:Action : Shift and goto state 181
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(BREAK,'break',31,641)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a62dd70> ({'instr': 27})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(BREAK,'break',31,641)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ff01a638e88>,';',{'instr': 27}] and goto state 96
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(BREAK,'break',31,641)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a62da28>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(BREAK,'break',31,641)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a628168>,<dict @ 0x7ff01a62da28>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(BREAK,'break',31,641)
   yacc.py: 366:Action : Shift and goto state 139
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements BREAK . LexToken(;,';',31,646)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements BREAK ; . LexToken(DEFAULT,'default',32,657)
   yacc.py: 389:Action : Reduce rule [JumpStatement -> BREAK ;] with ['break',';'] and goto state 127
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements JumpStatement . LexToken(DEFAULT,'default',32,657)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a635c58> ({'instr': 28})
   yacc.py: 337:
   yacc.py: 338:State  : 218
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements JumpStatement M_instr . LexToken(DEFAULT,'default',32,657)
   yacc.py: 389:Action : Reduce rule [Statement -> JumpStatement M_instr] with [None,{'instr': 28}] and goto state 99
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(DEFAULT,'default',32,657)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a638168>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a638168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(DEFAULT,'default',32,657)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a6387f8>,<dict @ 0x7ff01a638168>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a628168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(DEFAULT,'default',32,657)
   yacc.py: 366:Action : Shift and goto state 123
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements DEFAULT . LexToken(:,':',32,665)
   yacc.py: 366:Action : Shift and goto state 217
   yacc.py: 337:
   yacc.py: 338:State  : 217
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements DEFAULT : . LexToken(IDENTIFIER,'System',33,679)
   yacc.py: 389:Action : Reduce rule [LabelStatement -> DEFAULT :] with ['default',':'] and goto state 105
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement . LexToken(IDENTIFIER,'System',33,679)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a638b40> ({'instr': 28})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LabelStatement M_instr . LexToken(IDENTIFIER,'System',33,679)
   yacc.py: 389:Action : Reduce rule [Statement -> LabelStatement M_instr] with [None,{'instr': 28}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'System',33,679)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a62da28>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a62da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',33,679)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a628168>,<dict @ 0x7ff01a62da28>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a6387f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',33,679)
   yacc.py: 366:Action : Shift and goto state 90
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',33,685)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ff01b0a7450> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',33,685)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',33,686)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',33,689)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a73c0> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',33,689)
   yacc.py: 366:Action : Shift and goto state 235
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',33,690)
   yacc.py: 366:Action : Shift and goto state 72
   yacc.py: 337:
   yacc.py: 338:State  : 72
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',33,697)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7ff01b0a6618> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',33,697)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7ff01b0a6618>] and goto state 169
   yacc.py: 423:Result : <str @ 0x7ff01b0a6618> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',33,697)
   yacc.py: 366:Action : Shift and goto state 206
   yacc.py: 337:
   yacc.py: 338:State  : 206
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"Invalid grade"',33,698)
   yacc.py: 366:Action : Shift and goto state 159
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with [<str @ 0x7ff01b0a68b8>] and goto state 156
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7ff01a638b40>] and goto state 147
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a638b40>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a638b40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a638b40>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a638b40>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a638b40>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a638b40>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a638b40>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a638b40>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a638b40>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a638b40>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a638b40>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a638b40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a638b40>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a638b40>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a638b40>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a638b40>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a638b40>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a638b40>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a638b40>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'type': 'String', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 282
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',33,713)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7ff01a638b40>] and goto state 173
   yacc.py: 423:Result : <dict @ 0x7ff01a638e88> ({'expr': [{'type': 'String', 'tempVar':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 281
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',33,713)
   yacc.py: 366:Action : Shift and goto state 330
   yacc.py: 337:
   yacc.py: 338:State  : 330
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7ff01b0a6618>,'(',<dict @ 0x7ff01a638e88>,')'] and goto state 165
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 104
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 152
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7ff01a635280>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ff01a635280>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ff01a635280>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ff01a635280>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ff01a635280>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ff01a635280>] and goto state 198
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ff01a635280>] and goto state 205
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 145
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ff01a635280>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ff01a635280>] and goto state 210
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ff01a635280>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ff01a635280>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ff01a635280>] and goto state 220
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ff01a635280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ff01a635280>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ff01a635280>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ff01a635280>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ff01a635280>] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ff01a635280>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ff01a635280>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ff01a635280>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',33,714)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ff01a635280>] and goto state 107
   yacc.py: 423:Result : <dict @ 0x7ff01a635280> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 84
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',33,714)
   yacc.py: 366:Action : Shift and goto state 181
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',34,724)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a638e88> ({'instr': 30})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',34,724)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ff01a635280>,';',{'instr': 30}] and goto state 96
   yacc.py: 423:Result : <dict @ 0x7ff01a62dd70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',34,724)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a62dd70>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a62dd70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',34,724)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a6387f8>,<dict @ 0x7ff01a62dd70>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements . LexToken(},'}',34,724)
   yacc.py: 366:Action : Shift and goto state 161
   yacc.py: 337:
   yacc.py: 338:State  : 161
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements } . LexToken(},'}',62,1103)
   yacc.py: 389:Action : Reduce rule [Rparen -> }] with ['}'] and goto state 88
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 238
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Lparen LocalVariableDeclarationsAndStatements Rparen . LexToken(},'}',62,1103)
   yacc.py: 389:Action : Reduce rule [Block -> Lparen LocalVariableDeclarationsAndStatements Rparen] with [None,<dict @ 0x7ff01a638b40>,None] and goto state 85
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 364
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SWITCH ( Expression Mark_switch ) Block . LexToken(},'}',62,1103)
   yacc.py: 389:Action : Reduce rule [SelectionStatement -> SWITCH ( Expression Mark_switch ) Block] with ['switch','(','grade',None,')',<dict @ 0x7ff01a638b40>] and goto state 110
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement . LexToken(},'}',62,1103)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7ff01a636d70> ({'instr': 30})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement M_instr . LexToken(},'}',62,1103)
   yacc.py: 389:Action : Reduce rule [Statement -> SelectionStatement M_instr] with [None,{'instr': 30}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',62,1103)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ff01a638b40>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7ff01a638b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 239
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',62,1103)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ff01a636050>,<dict @ 0x7ff01a638b40>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ff01a6366e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',62,1103)
   yacc.py: 366:Action : Shift and goto state 322
   yacc.py: 337:
   yacc.py: 338:State  : 322
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',63,1105)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7ff01a6366e0>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7ff01a6366e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 320
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',63,1105)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7ff01b063560>,'void',<dict @ 0x7ff01a628b40>,<dict @ 0x7ff01a6366e0>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7ff01a637050> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(},'}',63,1105)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7ff01a637050>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7ff01a637050> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(},'}',63,1105)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7ff01a637050>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7ff01a637050> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 61
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(},'}',63,1105)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7ff01a637050>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7ff01a637050> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 59
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',63,1105)
   yacc.py: 366:Action : Shift and goto state 168
   yacc.py: 337:
   yacc.py: 338:State  : 168
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations }] with [<dict @ 0x7ff01a630280>,'{',<dict @ 0x7ff01a637050>,'}'] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

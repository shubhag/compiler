   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f303aad42a0> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f303aab8200> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,24)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7f303aab8200>,None,'HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7f303a0666e0> ({'class': None, 'id': 'HelloWorld', 'mod ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,24)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,31)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f303aad42a0> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f303aab8560> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,38)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f303aaed3c0> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f303aab8560>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f303aab8560> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(VOID,'void',3,45)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { Modifiers VOID . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7f303aaed4b0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f303aaed4b0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f303aaed4b0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,54)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f303aad42a0> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 75
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,54)
   yacc.py: 366:Action : Shift and goto state 172
   yacc.py: 337:
   yacc.py: 338:State  : 172
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',3,55)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303aaed390> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f303aaed390> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',3,61)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',3,62)
   yacc.py: 366:Action : Shift and goto state 178
   yacc.py: 337:
   yacc.py: 338:State  : 178
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 190
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 188
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f303aaed510> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f303a062168> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7f303a062168>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7f303aab87e8> (['type', 'name'])
   yacc.py: 337:
   yacc.py: 338:State  : 254
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',3,68)
   yacc.py: 366:Action : Shift and goto state 319
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',3,70)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7f303aab87e8>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7f303a062e88> ({'name': 'main', 'plist': ['type', 'name ...)
   yacc.py: 337:
   yacc.py: 338:State  : 185
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,70)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',4,79)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',4,83)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f303c16c788> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',4,83)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f303c16c788> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',4,83)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f303c16c788> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',4,83)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',4,84)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 229
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',4,84)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f303a0616e0> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',4,84)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f303a0616e0>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',4,84)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IF,'if',5,93)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a060910> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 338
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IF,'if',5,93)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IF,'if',5,93)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IF,'if',5,93)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IF,'if',5,93)
   yacc.py: 366:Action : Shift and goto state 164
   yacc.py: 337:
   yacc.py: 338:State  : 164
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF . LexToken((,'(',5,95)
   yacc.py: 366:Action : Shift and goto state 249
   yacc.py: 337:
   yacc.py: 338:State  : 249
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( . LexToken(IDENTIFIER,'a',5,96)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( IDENTIFIER . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( QualifiedName . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( PrimaryExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( PostfixExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( LogicalUnaryExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( UnaryExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( CastExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( MultiplicativeExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AdditiveExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['a'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ShiftExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['a'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with ['a'] and goto state 218
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression . LexToken(OP_EQ,'==',5,98)
   yacc.py: 366:Action : Shift and goto state 204
   yacc.py: 337:
   yacc.py: 338:State  : 204
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ . LexToken(INT_LITERAL,'1',5,101)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ INT_LITERAL . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ Integer_LIT . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a060c58>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ ComplexPrimary . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a060c58>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ NotJustName . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a060c58>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ PrimaryExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ PostfixExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a060c58>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ LogicalUnaryExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ UnaryExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ CastExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a060c58>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ MultiplicativeExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a060c58>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ AdditiveExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a060c58>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ ShiftExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a060c58>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 271
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression OP_EQ RelationalExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> EqualityExpression OP_EQ RelationalExpression] with ['a','==',<dict @ 0x7f303a060c58>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a060280>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AndExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a060280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ExclusiveOrExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a060280>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( InclusiveOrExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a060280>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalAndExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a060280>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalOrExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a060280>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a060280>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AssignmentExpression . LexToken(),')',5,102)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a060280>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression . LexToken(),')',5,102)
   yacc.py: 366:Action : Shift and goto state 344
   yacc.py: 337:
   yacc.py: 338:State  : 344
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) . LexToken({,'{',5,103)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a066d70> ({'instr': 4})
   yacc.py: 337:
   yacc.py: 338:State  : 357
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch . LexToken({,'{',5,103)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { . LexToken(IDENTIFIER,'a',6,114)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IDENTIFIER . LexToken(=,'=',6,116)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { QualifiedName . LexToken(=,'=',6,116)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { PrimaryExpression . LexToken(=,'=',6,116)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { PostfixExpression . LexToken(=,'=',6,116)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LogicalUnaryExpression . LexToken(=,'=',6,116)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression . LexToken(=,'=',6,116)
   yacc.py: 366:Action : Shift and goto state 237
   yacc.py: 337:
   yacc.py: 338:State  : 237
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression = . LexToken(INT_LITERAL,'5',6,118)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 237
   yacc.py: 423:Result : <str @ 0x7f303c1defd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'5',6,118)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['5'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a05fb40>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a05fb40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a05fb40>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a05fb40>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a05fb40>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a05fb40>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a05fb40>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a05fb40>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a05fb40>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a05fb40>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a05fb40>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a05fb40>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a05fb40>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a05fb40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a05fb40>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a05fb40>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a05fb40>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a05fb40>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a05fb40>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7f303a05fb40>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { AssignmentExpression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a05f168>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { Expression . LexToken(;,';',6,119)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f303a05f168>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { ExpressionStatement . LexToken(;,';',6,119)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { ExpressionStatement ; . LexToken(},'}',7,128)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05dd70> ({'instr': 6})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { ExpressionStatement ; M_instr . LexToken(},'}',7,128)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f303a05f168>,';',{'instr': 6}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f303a05da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { Statement . LexToken(},'}',7,128)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05da28>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LocalVariableDeclarationOrStatement . LexToken(},'}',7,128)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05da28>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements . LexToken(},'}',7,128)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements } . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a05fb40>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Block . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a060910> ({'instr': 6})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Block M_instr . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f303a05fb40>,{'instr': 6}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 364
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 389:Action : Reduce rule [SelectionStatement -> IF ( Expression ) M_instr_branch Statement] with ['if','(',<dict @ 0x7f303a060280>,')',{'instr': 4},<dict @ 0x7f303a060c58>] and goto state 105
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'beginLoop': [], 'endOfLoop': [], 'nLis ...)
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a061050> ({'instr': 6})
   yacc.py: 337:
   yacc.py: 338:State  : 208
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement M_instr . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 389:Action : Reduce rule [Statement -> SelectionStatement M_instr] with [<dict @ 0x7f303a05f7f8>,{'instr': 6}] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05fe88>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a0605c8>,<dict @ 0x7f303a05fe88>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'a',11,156)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',11,158)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',11,158)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',11,158)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',11,158)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',11,158)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',11,158)
   yacc.py: 366:Action : Shift and goto state 237
   yacc.py: 337:
   yacc.py: 338:State  : 237
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken((,'(',11,160)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 237
   yacc.py: 423:Result : <str @ 0x7f303c1defd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken((,'(',11,160)
   yacc.py: 366:Action : Shift and goto state 94
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( . LexToken(IDENTIFIER,'a',11,162)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( IDENTIFIER . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( QualifiedName . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( PrimaryExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( PostfixExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( LogicalUnaryExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( UnaryExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( CastExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( MultiplicativeExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( AdditiveExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['a'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ShiftExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['a'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( RelationalExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with ['a'] and goto state 218
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression . LexToken(OP_EQ,'==',11,164)
   yacc.py: 366:Action : Shift and goto state 204
   yacc.py: 337:
   yacc.py: 338:State  : 204
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ . LexToken(INT_LITERAL,'1',11,167)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ INT_LITERAL . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ Integer_LIT . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a05fe88>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ ComplexPrimary . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a05fe88>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ NotJustName . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a05fe88>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ PrimaryExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a05fe88>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ PostfixExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a05fe88>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ LogicalUnaryExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a05fe88>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ UnaryExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a05fe88>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ CastExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a05fe88>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ MultiplicativeExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a05fe88>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ AdditiveExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a05fe88>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ ShiftExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a05fe88>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 271
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ RelationalExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> EqualityExpression OP_EQ RelationalExpression] with ['a','==',<dict @ 0x7f303a05fe88>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a060280>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( AndExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a060280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ExclusiveOrExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a060280>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( InclusiveOrExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a060280>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ConditionalAndExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a060280>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ConditionalOrExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a060280>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ConditionalExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a060280>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( AssignmentExpression . LexToken(),')',11,168)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a060280>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( Expression . LexToken(),')',11,168)
   yacc.py: 366:Action : Shift and goto state 264
   yacc.py: 337:
   yacc.py: 338:State  : 264
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( Expression ) . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ( Expression )] with ['(',<dict @ 0x7f303a060280>,')'] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a060280>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a060280>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a060280>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a060280>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a060280>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a060280>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a060280>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a060280>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a060280>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a060280>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a060280>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a060280>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a060280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a060280>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a060280>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(?,'?',11,170)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a060280>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(?,'?',11,170)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? . LexToken(INT_LITERAL,'2',11,172)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a061050> ({'instr': 10})
   yacc.py: 337:
   yacc.py: 338:State  : 304
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr . LexToken(INT_LITERAL,'2',11,172)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr INT_LITERAL . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['2'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Integer_LIT . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a060c58>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ComplexPrimary . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a060c58>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr NotJustName . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a060c58>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr PrimaryExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr PostfixExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a060c58>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr LogicalUnaryExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr UnaryExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr CastExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a060c58>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr MultiplicativeExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a060c58>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr AdditiveExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a060c58>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ShiftExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a060c58>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr RelationalExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a060c58>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr EqualityExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a060c58>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr AndExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a060c58>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ExclusiveOrExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a060c58>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr InclusiveOrExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a060c58>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ConditionalAndExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a060c58>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ConditionalOrExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a060c58>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ConditionalExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a060c58>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr AssignmentExpression . LexToken(:,':',11,174)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a060c58>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 341
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression . LexToken(:,':',11,174)
   yacc.py: 391:Action : Reduce rule [Mark -> <empty>] with [] and goto state 234
   yacc.py: 462:Result : <dict @ 0x7f303a066d70> ({'temp': '_t6', 'instr': [12]})
   yacc.py: 337:
   yacc.py: 338:State  : 355
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark . LexToken(:,':',11,174)
   yacc.py: 366:Action : Shift and goto state 362
   yacc.py: 337:
   yacc.py: 338:State  : 362
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : . LexToken(INT_LITERAL,'3',11,176)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05f4b0> ({'instr': 13})
   yacc.py: 337:
   yacc.py: 338:State  : 368
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr . LexToken(INT_LITERAL,'3',11,176)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr INT_LITERAL . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['3'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr Integer_LIT . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a061398>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ComplexPrimary . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a061398>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr NotJustName . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a061398>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr PrimaryExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a061398>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr PostfixExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a061398>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr LogicalUnaryExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a061398>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr UnaryExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a061398>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr CastExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a061398>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr MultiplicativeExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a061398>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr AdditiveExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a061398>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ShiftExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a061398>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr RelationalExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a061398>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr EqualityExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a061398>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr AndExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a061398>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ExclusiveOrExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a061398>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr InclusiveOrExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a061398>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ConditionalAndExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a061398>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ConditionalOrExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a061398>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 372
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ConditionalExpression . LexToken(;,';',11,178)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05ec58> ({'instr': 14})
   yacc.py: 337:
   yacc.py: 338:State  : 376
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression Mark : M_instr ConditionalExpression M_instr . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression ? M_instr Expression Mark : M_instr ConditionalExpression M_instr] with [<dict @ 0x7f303a060280>,'?',{'instr': 10},<dict @ 0x7f303a060c58>,<dict @ 0x7f303a066d70>,':',{'instr': 13},<dict @ 0x7f303a061398>,{'instr': 14}] and goto state 233
   yacc.py: 423:Result : <dict @ 0x7f303a05d6e0> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a05d6e0>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a05d6e0> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7f303a05d6e0>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a05e910>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',11,178)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f303a05e910>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',11,178)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(WHILE,'while',15,214)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05e5c8> ({'instr': 16})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(WHILE,'while',15,214)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f303a05e910>,';',{'instr': 16}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(WHILE,'while',15,214)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a060280>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(WHILE,'while',15,214)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a0624b0>,<dict @ 0x7f303a060280>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a05d6e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(WHILE,'while',15,214)
   yacc.py: 366:Action : Shift and goto state 131
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE . LexToken((,'(',15,219)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a05da28> ({'instr': 16})
   yacc.py: 337:
   yacc.py: 338:State  : 226
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch . LexToken((,'(',15,219)
   yacc.py: 366:Action : Shift and goto state 295
   yacc.py: 337:
   yacc.py: 338:State  : 295
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( . LexToken(IDENTIFIER,'a',15,220)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( IDENTIFIER . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( QualifiedName . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( PrimaryExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( PostfixExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( LogicalUnaryExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( UnaryExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( CastExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( MultiplicativeExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( AdditiveExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['a'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ShiftExpression . LexToken(<,'<',15,221)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['a'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression . LexToken(<,'<',15,221)
   yacc.py: 366:Action : Shift and goto state 215
   yacc.py: 337:
   yacc.py: 338:State  : 215
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < . LexToken(INT_LITERAL,'5',15,222)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < INT_LITERAL . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['5'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < Integer_LIT . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a0624b0>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < ComplexPrimary . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a0624b0>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < NotJustName . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a0624b0>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < PrimaryExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a0624b0>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < PostfixExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a0624b0>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < LogicalUnaryExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a0624b0>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < UnaryExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a0624b0>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < CastExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a0624b0>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < MultiplicativeExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a0624b0>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < AdditiveExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a0624b0>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'tempVar': '_t8'})
   yacc.py: 337:
   yacc.py: 338:State  : 287
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < ShiftExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> RelationalExpression < ShiftExpression] with ['a','<',<dict @ 0x7f303a0624b0>] and goto state 214
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( EqualityExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( AndExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ExclusiveOrExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( InclusiveOrExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ConditionalAndExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ConditionalOrExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ConditionalExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( AssignmentExpression . LexToken(),')',15,223)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'trueList': [18], 'falseList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 332
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression . LexToken(),')',15,223)
   yacc.py: 366:Action : Shift and goto state 351
   yacc.py: 337:
   yacc.py: 338:State  : 351
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) . LexToken({,'{',15,224)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a061050> ({'instr': 20})
   yacc.py: 337:
   yacc.py: 338:State  : 360
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch . LexToken({,'{',15,224)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { . LexToken(IDENTIFIER,'a',16,232)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { IDENTIFIER . LexToken(=,'=',16,234)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { QualifiedName . LexToken(=,'=',16,234)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { PrimaryExpression . LexToken(=,'=',16,234)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { PostfixExpression . LexToken(=,'=',16,234)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { LogicalUnaryExpression . LexToken(=,'=',16,234)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression . LexToken(=,'=',16,234)
   yacc.py: 366:Action : Shift and goto state 237
   yacc.py: 337:
   yacc.py: 338:State  : 237
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression = . LexToken(IDENTIFIER,'a',16,236)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 237
   yacc.py: 423:Result : <str @ 0x7f303c1defd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator . LexToken(IDENTIFIER,'a',16,236)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator IDENTIFIER . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator QualifiedName . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator PrimaryExpression . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator PostfixExpression . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator UnaryExpression . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator CastExpression . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(+,'+',16,237)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(+,'+',16,237)
   yacc.py: 366:Action : Shift and goto state 233
   yacc.py: 337:
   yacc.py: 338:State  : 233
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + . LexToken(INT_LITERAL,'1',16,239)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + INT_LITERAL . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + Integer_LIT . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a05fb40>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + ComplexPrimary . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a05fb40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + NotJustName . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a05fb40>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + PrimaryExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a05fb40>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + PostfixExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a05fb40>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + LogicalUnaryExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a05fb40>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + UnaryExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a05fb40>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + CastExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a05fb40>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'type': 'int', 'tempVar': '_t10'})
   yacc.py: 337:
   yacc.py: 338:State  : 305
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression + MultiplicativeExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> AdditiveExpression + MultiplicativeExpression] with ['a','+',<dict @ 0x7f303a05fb40>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a05d398>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a05d398>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a05d398>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a05d398>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a05d398>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a05d398>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a05d398>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a05d398>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a05d398>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a05d398>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t11'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7f303a05d398>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f303a05f4b0> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { AssignmentExpression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a05f4b0>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a05f4b0> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { Expression . LexToken(;,';',16,240)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f303a05f4b0>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7f303a05f4b0> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { ExpressionStatement . LexToken(;,';',16,240)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { ExpressionStatement ; . LexToken(},'}',17,246)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a061398> ({'instr': 23})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { ExpressionStatement ; M_instr . LexToken(},'}',17,246)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f303a05f4b0>,';',{'instr': 23}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { Statement . LexToken(},'}',17,246)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05fe88>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { LocalVariableDeclarationOrStatement . LexToken(},'}',17,246)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05fe88>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements . LexToken(},'}',17,246)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements } . LexToken(DO,'do',21,280)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a05d398>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch Block . LexToken(DO,'do',21,280)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05f168> ({'instr': 23})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch Block M_instr . LexToken(DO,'do',21,280)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f303a05d398>,{'instr': 23}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 367
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression ) M_instr_branch Statement . LexToken(DO,'do',21,280)
   yacc.py: 389:Action : Reduce rule [IterationStatement -> WHILE M_instr_branch ( Expression ) M_instr_branch Statement] with ['while',{'instr': 16},'(',<dict @ 0x7f303a05f7f8>,')',{'instr': 20},<dict @ 0x7f303a060c58>] and goto state 111
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'nList': [19]})
   yacc.py: 337:
   yacc.py: 338:State  : 169
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement . LexToken(DO,'do',21,280)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a064c58> ({'instr': 24})
   yacc.py: 337:
   yacc.py: 338:State  : 251
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement M_instr . LexToken(DO,'do',21,280)
   yacc.py: 389:Action : Reduce rule [Statement -> IterationStatement M_instr] with [{'nList': [19]},{'instr': 24}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7f303a05e5c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(DO,'do',21,280)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05e5c8>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05e5c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(DO,'do',21,280)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05d6e0>,<dict @ 0x7f303a05e5c8>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a05dd70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(DO,'do',21,280)
   yacc.py: 366:Action : Shift and goto state 150
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO . LexToken({,'{',21,282)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a061a28> ({'instr': 24})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch . LexToken({,'{',21,282)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { . LexToken(IDENTIFIER,'a',21,283)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { IDENTIFIER . LexToken(=,'=',21,285)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { QualifiedName . LexToken(=,'=',21,285)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { PrimaryExpression . LexToken(=,'=',21,285)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { PostfixExpression . LexToken(=,'=',21,285)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { LogicalUnaryExpression . LexToken(=,'=',21,285)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression . LexToken(=,'=',21,285)
   yacc.py: 366:Action : Shift and goto state 237
   yacc.py: 337:
   yacc.py: 338:State  : 237
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression = . LexToken(INT_LITERAL,'6',21,287)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 237
   yacc.py: 423:Result : <str @ 0x7f303c1defd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'6',21,287)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['6'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a064c58>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a064c58>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a064c58>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a064c58>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a064c58>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a064c58>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a064c58>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a064c58>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a064c58>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a064c58>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a064c58>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a064c58>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a064c58>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a064c58>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a064c58>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a064c58>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a064c58>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a064c58>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a064c58>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t12'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7f303a064c58>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { AssignmentExpression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a05e910>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { Expression . LexToken(;,';',21,288)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f303a05e910>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { ExpressionStatement . LexToken(;,';',21,288)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { ExpressionStatement ; . LexToken(},'}',21,289)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a0616e0> ({'instr': 26})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { ExpressionStatement ; M_instr . LexToken(},'}',21,289)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f303a05e910>,';',{'instr': 26}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { Statement . LexToken(},'}',21,289)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05f7f8>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { LocalVariableDeclarationOrStatement . LexToken(},'}',21,289)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05f7f8>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { LocalVariableDeclarationsAndStatements . LexToken(},'}',21,289)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch { LocalVariableDeclarationsAndStatements } . LexToken(WHILE,'while',21,290)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a064c58>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Block . LexToken(WHILE,'while',21,290)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a060910> ({'instr': 26})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Block M_instr . LexToken(WHILE,'while',21,290)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f303a064c58>,{'instr': 26}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7f303a05d6e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 310
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement . LexToken(WHILE,'while',21,290)
   yacc.py: 366:Action : Shift and goto state 342
   yacc.py: 337:
   yacc.py: 338:State  : 342
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE . LexToken((,'(',21,295)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a05da28> ({'instr': 26})
   yacc.py: 337:
   yacc.py: 338:State  : 356
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch . LexToken((,'(',21,295)
   yacc.py: 366:Action : Shift and goto state 363
   yacc.py: 337:
   yacc.py: 338:State  : 363
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( . LexToken(IDENTIFIER,'a',21,296)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( IDENTIFIER . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( QualifiedName . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( PrimaryExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( PostfixExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( LogicalUnaryExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( UnaryExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( CastExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( MultiplicativeExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( AdditiveExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['a'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( ShiftExpression . LexToken(<,'<',21,297)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['a'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f303c2a1670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression . LexToken(<,'<',21,297)
   yacc.py: 366:Action : Shift and goto state 215
   yacc.py: 337:
   yacc.py: 338:State  : 215
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < . LexToken(INT_LITERAL,'5',21,298)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < INT_LITERAL . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['5'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < Integer_LIT . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a064c58>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < ComplexPrimary . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a064c58>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < NotJustName . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a064c58>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < PrimaryExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a064c58>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < PostfixExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a064c58>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < LogicalUnaryExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a064c58>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < UnaryExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a064c58>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < CastExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a064c58>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < MultiplicativeExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a064c58>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < AdditiveExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a064c58>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a064c58> ({'type': 'int', 'tempVar': '_t13'})
   yacc.py: 337:
   yacc.py: 338:State  : 287
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression < ShiftExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> RelationalExpression < ShiftExpression] with ['a','<',<dict @ 0x7f303a064c58>] and goto state 214
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( RelationalExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a061050>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( EqualityExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a061050>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( AndExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a061050>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( ExclusiveOrExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a061050>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( InclusiveOrExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a061050>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( ConditionalAndExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a061050>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( ConditionalOrExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a061050>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( ConditionalExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a061050>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( AssignmentExpression . LexToken(),')',21,299)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a061050>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'trueList': [28], 'falseList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 369
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( Expression . LexToken(),')',21,299)
   yacc.py: 366:Action : Shift and goto state 373
   yacc.py: 337:
   yacc.py: 338:State  : 373
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( Expression ) . LexToken(;,';',21,300)
   yacc.py: 366:Action : Shift and goto state 377
   yacc.py: 337:
   yacc.py: 338:State  : 377
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements DO M_instr_branch Statement WHILE M_instr_branch ( Expression ) ; . LexToken(INT,'int',28,317)
   yacc.py: 389:Action : Reduce rule [IterationStatement -> DO M_instr_branch Statement WHILE M_instr_branch ( Expression ) ;] with ['do',{'instr': 24},<dict @ 0x7f303a05d6e0>,'while',{'instr': 26},'(',<dict @ 0x7f303a061050>,')',';'] and goto state 112
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'nList': [29]})
   yacc.py: 337:
   yacc.py: 338:State  : 169
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement . LexToken(INT,'int',28,317)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05f4b0> ({'instr': 31})
   yacc.py: 337:
   yacc.py: 338:State  : 251
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement M_instr . LexToken(INT,'int',28,317)
   yacc.py: 389:Action : Reduce rule [Statement -> IterationStatement M_instr] with [{'nList': [29]},{'instr': 31}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(INT,'int',28,317)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05f168>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(INT,'int',28,317)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05dd70>,<dict @ 0x7f303a05f168>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(INT,'int',28,317)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements INT . LexToken(IDENTIFIER,'x',28,321)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f303c16ca80> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimitiveType . LexToken(IDENTIFIER,'x',28,321)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f303c16ca80> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeName . LexToken(IDENTIFIER,'x',28,321)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f303c16ca80> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier . LexToken(IDENTIFIER,'x',28,321)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier IDENTIFIER . LexToken(=,'=',28,323)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['x'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 229
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName . LexToken(=,'=',28,323)
   yacc.py: 366:Action : Shift and goto state 173
   yacc.py: 337:
   yacc.py: 338:State  : 173
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = . LexToken(INT_LITERAL,'30',28,325)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = INT_LITERAL . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['30'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = Integer_LIT . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a0605c8>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ComplexPrimary . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a0605c8>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = NotJustName . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a0605c8>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = PrimaryExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a0605c8>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = PostfixExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a0605c8>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = LogicalUnaryExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a0605c8>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = UnaryExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a0605c8>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = CastExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a0605c8>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = MultiplicativeExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a0605c8>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AdditiveExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a0605c8>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ShiftExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a0605c8>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = RelationalExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a0605c8>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = EqualityExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a0605c8>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AndExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a0605c8>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ExclusiveOrExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a0605c8>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = InclusiveOrExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a0605c8>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalAndExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a0605c8>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalOrExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a0605c8>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a0605c8>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AssignmentExpression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a0605c8>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = Expression . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [VariableInitializer -> Expression] with [<dict @ 0x7f303a0605c8>] and goto state 61
   yacc.py: 423:Result : <dict @ 0x7f303a0605c8> ({'type': 'int', 'tempVar': '_t15'})
   yacc.py: 337:
   yacc.py: 338:State  : 255
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = VariableInitializer . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName = VariableInitializer] with ['x','=',<dict @ 0x7f303a0605c8>] and goto state 60
   yacc.py: 423:Result : <dict @ 0x7f303a05fe88> ({'type': 'int', 'name': 'x'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarator . LexToken(;,';',28,327)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f303a05fe88>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f303a05dd70> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators . LexToken(;,';',28,327)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators ; . LexToken(INT,'int',29,335)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a0605c8> ({'instr': 33})
   yacc.py: 337:
   yacc.py: 338:State  : 338
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators ; M_instr . LexToken(INT,'int',29,335)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 33}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7f303a05f4b0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationStatement . LexToken(INT,'int',29,335)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7f303a05f4b0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(INT,'int',29,335)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05d398>,{}] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a05e910> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(INT,'int',29,335)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements INT . LexToken(IDENTIFIER,'y',29,339)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f303c16cb20> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimitiveType . LexToken(IDENTIFIER,'y',29,339)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f303c16cb20> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeName . LexToken(IDENTIFIER,'y',29,339)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f303c16cb20> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier . LexToken(IDENTIFIER,'y',29,339)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier IDENTIFIER . LexToken(=,'=',29,341)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['y'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 229
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName . LexToken(=,'=',29,341)
   yacc.py: 366:Action : Shift and goto state 173
   yacc.py: 337:
   yacc.py: 338:State  : 173
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = . LexToken(INT_LITERAL,'10',29,343)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = INT_LITERAL . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['10'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = Integer_LIT . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a060c58>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ComplexPrimary . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a060c58>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = NotJustName . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a060c58>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = PrimaryExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = PostfixExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a060c58>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = LogicalUnaryExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = UnaryExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a060c58>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = CastExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a060c58>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = MultiplicativeExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a060c58>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AdditiveExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a060c58>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ShiftExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a060c58>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = RelationalExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a060c58>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = EqualityExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a060c58>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AndExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a060c58>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ExclusiveOrExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a060c58>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = InclusiveOrExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a060c58>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalAndExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a060c58>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalOrExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a060c58>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a060c58>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AssignmentExpression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a060c58>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = Expression . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [VariableInitializer -> Expression] with [<dict @ 0x7f303a060c58>] and goto state 61
   yacc.py: 423:Result : <dict @ 0x7f303a060c58> ({'type': 'int', 'tempVar': '_t16'})
   yacc.py: 337:
   yacc.py: 338:State  : 255
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = VariableInitializer . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName = VariableInitializer] with ['y','=',<dict @ 0x7f303a060c58>] and goto state 60
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'type': 'int', 'name': 'y'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarator . LexToken(;,';',29,345)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f303a0624b0>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators . LexToken(;,';',29,345)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators ; . LexToken(IF,'if',30,353)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a060c58> ({'instr': 35})
   yacc.py: 337:
   yacc.py: 338:State  : 338
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators ; M_instr . LexToken(IF,'if',30,353)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 35}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7f303a061a28> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationStatement . LexToken(IF,'if',30,353)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7f303a061a28> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IF,'if',30,353)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05e910>,{}] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a05e5c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IF,'if',30,353)
   yacc.py: 366:Action : Shift and goto state 164
   yacc.py: 337:
   yacc.py: 338:State  : 164
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF . LexToken((,'(',30,355)
   yacc.py: 366:Action : Shift and goto state 249
   yacc.py: 337:
   yacc.py: 338:State  : 249
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( . LexToken(IDENTIFIER,'x',30,357)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( IDENTIFIER . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['x'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( QualifiedName . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['x'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( PrimaryExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['x'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( PostfixExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['x'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( LogicalUnaryExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['x'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( UnaryExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['x'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( CastExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['x'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( MultiplicativeExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['x'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AdditiveExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['x'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ShiftExpression . LexToken(>,'>',30,359)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['x'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression . LexToken(>,'>',30,359)
   yacc.py: 366:Action : Shift and goto state 218
   yacc.py: 337:
   yacc.py: 338:State  : 218
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > . LexToken(INT_LITERAL,'30',30,361)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > INT_LITERAL . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['30'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > Integer_LIT . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a05d398>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > ComplexPrimary . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a05d398>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > NotJustName . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a05d398>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > PrimaryExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a05d398>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > PostfixExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a05d398>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > LogicalUnaryExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a05d398>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > UnaryExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a05d398>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > CastExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a05d398>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > MultiplicativeExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a05d398>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > AdditiveExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a05d398>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a05d398> ({'type': 'int', 'tempVar': '_t17'})
   yacc.py: 337:
   yacc.py: 338:State  : 290
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression > ShiftExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> RelationalExpression > ShiftExpression] with ['x','>',<dict @ 0x7f303a05d398>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a0624b0>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a0624b0>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AndExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a0624b0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ExclusiveOrExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a0624b0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( InclusiveOrExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a0624b0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalAndExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a0624b0>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalOrExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a0624b0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a0624b0>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AssignmentExpression . LexToken(),')',30,364)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a0624b0>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a0624b0> ({'trueList': [37], 'falseList': [38]})
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression . LexToken(),')',30,364)
   yacc.py: 366:Action : Shift and goto state 344
   yacc.py: 337:
   yacc.py: 338:State  : 344
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) . LexToken({,'{',30,365)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a061a28> ({'instr': 39})
   yacc.py: 337:
   yacc.py: 338:State  : 357
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch . LexToken({,'{',30,365)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { . LexToken(IF,'if',31,376)
   yacc.py: 366:Action : Shift and goto state 164
   yacc.py: 337:
   yacc.py: 338:State  : 164
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF . LexToken((,'(',31,378)
   yacc.py: 366:Action : Shift and goto state 249
   yacc.py: 337:
   yacc.py: 338:State  : 249
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( . LexToken(IDENTIFIER,'y',31,380)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( IDENTIFIER . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['y'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( QualifiedName . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['y'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( PrimaryExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['y'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( PostfixExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['y'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( LogicalUnaryExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['y'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( UnaryExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['y'] and goto state 203
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( CastExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['y'] and goto state 204
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( MultiplicativeExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['y'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( AdditiveExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['y'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( ShiftExpression . LexToken(>,'>',31,382)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['y'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression . LexToken(>,'>',31,382)
   yacc.py: 366:Action : Shift and goto state 218
   yacc.py: 337:
   yacc.py: 338:State  : 218
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > . LexToken(INT_LITERAL,'10',31,384)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > INT_LITERAL . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['10'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > Integer_LIT . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a05f7f8>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > ComplexPrimary . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a05f7f8>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > NotJustName . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a05f7f8>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > PrimaryExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > PostfixExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > LogicalUnaryExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 202
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > UnaryExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > CastExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > MultiplicativeExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > AdditiveExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a05f7f8>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'type': 'int', 'tempVar': '_t19'})
   yacc.py: 337:
   yacc.py: 338:State  : 290
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression > ShiftExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> RelationalExpression > ShiftExpression] with ['y','>',<dict @ 0x7f303a05f7f8>] and goto state 215
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( RelationalExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a066d70>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( EqualityExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a066d70>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( AndExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a066d70>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( ExclusiveOrExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a066d70>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( InclusiveOrExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a066d70>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( ConditionalAndExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a066d70>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( ConditionalOrExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a066d70>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( ConditionalExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a066d70>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( AssignmentExpression . LexToken(),')',31,387)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a066d70>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'trueList': [41], 'falseList': [42]})
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression . LexToken(),')',31,387)
   yacc.py: 366:Action : Shift and goto state 344
   yacc.py: 337:
   yacc.py: 338:State  : 344
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) . LexToken({,'{',31,388)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a061398> ({'instr': 43})
   yacc.py: 337:
   yacc.py: 338:State  : 357
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch . LexToken({,'{',31,388)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { . LexToken(IDENTIFIER,'x',32,403)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { IDENTIFIER . LexToken(=,'=',32,405)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['x'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { QualifiedName . LexToken(=,'=',32,405)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['x'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { PrimaryExpression . LexToken(=,'=',32,405)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['x'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { PostfixExpression . LexToken(=,'=',32,405)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['x'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { LogicalUnaryExpression . LexToken(=,'=',32,405)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['x'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c2b8d50> ('x')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression . LexToken(=,'=',32,405)
   yacc.py: 366:Action : Shift and goto state 237
   yacc.py: 337:
   yacc.py: 338:State  : 237
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression = . LexToken(INT_LITERAL,'1',32,407)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 237
   yacc.py: 423:Result : <str @ 0x7f303c1defd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'1',32,407)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a05d050>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a05d050>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a05d050>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a05d050>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a05d050>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a05d050>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a05d050>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a05d050>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a05d050>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a05d050>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a05d050>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a05d050>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a05d050>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a05d050>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a05d050>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a05d050>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a05d050>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a05d050>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a05d050>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'type': 'int', 'tempVar': '_t21'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['x','=',<dict @ 0x7f303a05d050>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f303a05be88> ({'type': 'int', 'tempVar': 'x'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { AssignmentExpression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a05be88>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a05be88> ({'type': 'int', 'tempVar': 'x'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { Expression . LexToken(;,';',32,408)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f303a05be88>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7f303a05be88> ({'type': 'int', 'tempVar': 'x'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { ExpressionStatement . LexToken(;,';',32,408)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { ExpressionStatement ; . LexToken(},'}',33,420)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05bb40> ({'instr': 45})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { ExpressionStatement ; M_instr . LexToken(},'}',33,420)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f303a05be88>,';',{'instr': 45}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f303a05b7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { Statement . LexToken(},'}',33,420)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05b7f8>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05b7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { LocalVariableDeclarationOrStatement . LexToken(},'}',33,420)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05b7f8>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements . LexToken(},'}',33,420)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements } . LexToken(},'}',34,429)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a05d050>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a05d050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch Block . LexToken(},'}',34,429)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05fb40> ({'instr': 45})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch Block M_instr . LexToken(},'}',34,429)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f303a05d050>,{'instr': 45}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 364
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { IF ( Expression ) M_instr_branch Statement . LexToken(},'}',34,429)
   yacc.py: 389:Action : Reduce rule [SelectionStatement -> IF ( Expression ) M_instr_branch Statement] with ['if','(',<dict @ 0x7f303a066d70>,')',{'instr': 43},<dict @ 0x7f303a05f7f8>] and goto state 105
   yacc.py: 423:Result : <dict @ 0x7f303a05ec58> ({'beginLoop': [], 'endOfLoop': [], 'nLis ...)
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { SelectionStatement . LexToken(},'}',34,429)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05d398> ({'instr': 45})
   yacc.py: 337:
   yacc.py: 338:State  : 208
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { SelectionStatement M_instr . LexToken(},'}',34,429)
   yacc.py: 389:Action : Reduce rule [Statement -> SelectionStatement M_instr] with [<dict @ 0x7f303a05ec58>,{'instr': 45}] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { Statement . LexToken(},'}',34,429)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a061050>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a061050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LocalVariableDeclarationOrStatement . LexToken(},'}',34,429)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a061050>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a05da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements . LexToken(},'}',34,429)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { LocalVariableDeclarationsAndStatements } . LexToken(ELSE,'else',34,431)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a05da28>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a05da28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Block . LexToken(ELSE,'else',34,431)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a060c58> ({'instr': 45})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Block M_instr . LexToken(ELSE,'else',34,431)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f303a05da28>,{'instr': 45}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7f303a05be88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 364
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement . LexToken(ELSE,'else',34,431)
   yacc.py: 366:Action : Shift and goto state 370
   yacc.py: 337:
   yacc.py: 338:State  : 370
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE . LexToken({,'{',34,435)
   yacc.py: 391:Action : Reduce rule [N_instr -> <empty>] with [] and goto state 109
   yacc.py: 462:Result : <dict @ 0x7f303a05d050> ({'nList': [45]})
   yacc.py: 337:
   yacc.py: 338:State  : 374
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr . LexToken({,'{',34,435)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7f303a05f4b0> ({'instr': 46})
   yacc.py: 337:
   yacc.py: 338:State  : 378
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch . LexToken({,'{',34,435)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { . LexToken(IDENTIFIER,'y',35,446)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { IDENTIFIER . LexToken(=,'=',35,448)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['y'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { QualifiedName . LexToken(=,'=',35,448)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['y'] and goto state 135
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { PrimaryExpression . LexToken(=,'=',35,448)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['y'] and goto state 191
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { PostfixExpression . LexToken(=,'=',35,448)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['y'] and goto state 197
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { LogicalUnaryExpression . LexToken(=,'=',35,448)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['y'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f303c1de648> ('y')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression . LexToken(=,'=',35,448)
   yacc.py: 366:Action : Shift and goto state 237
   yacc.py: 337:
   yacc.py: 338:State  : 237
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression = . LexToken(INT_LITERAL,'1',35,450)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 237
   yacc.py: 423:Result : <str @ 0x7f303c1defd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 235
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'1',35,450)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f303a060910>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f303a060910>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f303a060910>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f303a060910>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f303a060910>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f303a060910>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f303a060910>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f303a060910>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f303a060910>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f303a060910>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f303a060910>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f303a060910>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f303a060910>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f303a060910>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f303a060910>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f303a060910>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f303a060910>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f303a060910>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f303a060910>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'int', 'tempVar': '_t22'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['y','=',<dict @ 0x7f303a060910>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': 'y'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { AssignmentExpression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f303a061398>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': 'y'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { Expression . LexToken(;,';',35,451)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f303a061398>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7f303a061398> ({'type': 'int', 'tempVar': 'y'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { ExpressionStatement . LexToken(;,';',35,451)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { ExpressionStatement ; . LexToken(},'}',36,460)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05b4b0> ({'instr': 48})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { ExpressionStatement ; M_instr . LexToken(},'}',36,460)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f303a061398>,';',{'instr': 48}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { Statement . LexToken(},'}',36,460)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05fb40>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05fb40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { LocalVariableDeclarationOrStatement . LexToken(},'}',36,460)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05fb40>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { LocalVariableDeclarationsAndStatements . LexToken(},'}',36,460)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch { LocalVariableDeclarationsAndStatements } . LexToken(},'}',37,462)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a060910>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch Block . LexToken(},'}',37,462)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a061050> ({'instr': 48})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch Block M_instr . LexToken(},'}',37,462)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f303a060910>,{'instr': 48}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7f303a066d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 380
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch Statement . LexToken(},'}',37,462)
   yacc.py: 389:Action : Reduce rule [SelectionStatement -> IF ( Expression ) M_instr_branch Statement ELSE N_instr M_instr_branch Statement] with ['if','(',<dict @ 0x7f303a0624b0>,')',{'instr': 39},<dict @ 0x7f303a05be88>,'else',{'nList': [45]},{'instr': 46},<dict @ 0x7f303a066d70>] and goto state 106
   yacc.py: 423:Result : <dict @ 0x7f303a060280> ({'beginLoop': [], 'endOfLoop': [], 'nLis ...)
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement . LexToken(},'}',37,462)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f303a05dd70> ({'instr': 48})
   yacc.py: 337:
   yacc.py: 338:State  : 208
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement M_instr . LexToken(},'}',37,462)
   yacc.py: 389:Action : Reduce rule [Statement -> SelectionStatement M_instr] with [<dict @ 0x7f303a060280>,{'instr': 48}] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',37,462)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f303a05f7f8>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f303a05f7f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',37,462)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f303a05e5c8>,<dict @ 0x7f303a05f7f8>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',37,462)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',38,464)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f303a05f168>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 177
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator Block . LexToken(},'}',38,464)
   yacc.py: 389:Action : Reduce rule [MethodBody -> Block] with [<dict @ 0x7f303a05f168>] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f303a05f168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 260
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',38,464)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f303aab8560>,'void',<dict @ 0x7f303a062e88>,<dict @ 0x7f303a05f168>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 55
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(},'}',38,464)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f303a060910>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 67
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(},'}',38,464)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f303a060910>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(},'}',38,464)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7f303a060910>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7f303a060910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',38,464)
   yacc.py: 366:Action : Shift and goto state 86
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations }] with [<dict @ 0x7f303a0666e0>,'{',<dict @ 0x7f303a060910>,'}'] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

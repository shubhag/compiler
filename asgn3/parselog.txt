   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f04d4d085a0> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f04d4ce8518> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <str @ 0x7f04d4d288a0> ('class')
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,24)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7f04d4ce8518>,'class','HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7f04d42edd70> ({'class': 'class', 'id': 'HelloWorld', ' ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,24)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,32)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,39)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f04d4d085a0> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,39)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f04d4ce85f0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,39)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(INT,'int',3,46)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f04d4d28900> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(INT,'int',3,46)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f04d4ce85f0>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f04d4ce85f0> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(INT,'int',3,46)
   yacc.py: 366:Action : Shift and goto state 63
   yacc.py: 337:
   yacc.py: 338:State  : 63
   yacc.py: 352:Stack  : ClassHeader { Modifiers INT . LexToken(IDENTIFIER,'newmain',3,50)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f04d4d21f30> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'newmain',3,50)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f04d4d21f30> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'newmain',3,50)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f04d4d21f30> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 166
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'newmain',3,50)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,57)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['newmain'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f04d4d085a0> ('newmain')
   yacc.py: 337:
   yacc.py: 338:State  : 76
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,57)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(),')',3,58)
   yacc.py: 366:Action : Shift and goto state 255
   yacc.py: 337:
   yacc.py: 338:State  : 255
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ) . LexToken({,'{',3,60)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( )] with ['newmain','(',')'] and goto state 68
   yacc.py: 423:Result : <dict @ 0x7f04d42dad70> ({'name': 'newmain', 'plist': []})
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,60)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',4,68)
   yacc.py: 366:Action : Shift and goto state 63
   yacc.py: 337:
   yacc.py: 338:State  : 63
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',4,72)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f04d4d21ee0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',4,72)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f04d4d21ee0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',4,72)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f04d4d21ee0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',4,72)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',4,74)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 224
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',4,74)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f04d42da398> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',4,74)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f04d42da398>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f04d42f74b0> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',4,74)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(},'}',5,80)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7f04d42db280> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 342
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(},'}',5,80)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f04d42ed398> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(},'}',5,80)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f04d42ed398> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(},'}',5,80)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f04d42e0e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',5,80)
   yacc.py: 366:Action : Shift and goto state 324
   yacc.py: 337:
   yacc.py: 338:State  : 324
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(PUBLIC,'public',7,87)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f04d42e0e88>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f04d42e0e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 322
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(PUBLIC,'public',7,87)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f04d4ce85f0>,'int',<dict @ 0x7f04d42dad70>,<dict @ 0x7f04d42e0e88>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f04d42dfb40> ({'type': 'int', 'method': {'name': 'newm ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(PUBLIC,'public',7,87)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f04d42dfb40>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f04d42dfb40> ({'type': 'int', 'method': {'name': 'newm ...)
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(PUBLIC,'public',7,87)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f04d42dfb40>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f04d42dfb40> ({'type': 'int', 'method': {'name': 'newm ...)
   yacc.py: 337:
   yacc.py: 338:State  : 61
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(PUBLIC,'public',7,87)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7f04d42dfb40>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7f04d42dfb40> ({'type': 'int', 'method': {'name': 'newm ...)
   yacc.py: 337:
   yacc.py: 338:State  : 59
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(PUBLIC,'public',7,87)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations PUBLIC . LexToken(STATIC,'static',7,94)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f04d4d28870> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifier . LexToken(STATIC,'static',7,94)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f04d4ce8710> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers . LexToken(STATIC,'static',7,94)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers STATIC . LexToken(VOID,'void',7,101)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f04d4d289c0> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers Modifier . LexToken(VOID,'void',7,101)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f04d4ce8710>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f04d4ce8710> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers . LexToken(VOID,'void',7,101)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers VOID . LexToken(IDENTIFIER,'main',7,106)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7f04d4d28960> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',7,106)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f04d4d28960> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeName . LexToken(IDENTIFIER,'main',7,106)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f04d4d28960> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 166
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',7,106)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',7,110)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f04d4d28870> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 76
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',7,110)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',7,111)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',7,117)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f04d4d28780> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',7,117)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f04d4d28780> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',7,117)
   yacc.py: 366:Action : Shift and goto state 80
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',7,118)
   yacc.py: 366:Action : Shift and goto state 180
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',7,120)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 193
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',7,120)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 191
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 82
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',7,120)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 248
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',7,120)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',7,124)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f04d4d28930> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',7,124)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f04d42ed398> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',7,124)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7f04d42ed398>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7f04d43dff38> ([{'type': None, 'name': 'args'}])
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',7,124)
   yacc.py: 366:Action : Shift and goto state 323
   yacc.py: 337:
   yacc.py: 338:State  : 323
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',7,126)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7f04d43dff38>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7f04d42e0b40> ({'name': 'main', 'plist': [{'type': None ...)
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',7,126)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',13,277)
   yacc.py: 366:Action : Shift and goto state 63
   yacc.py: 337:
   yacc.py: 338:State  : 63
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',13,281)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f04d4d21fa8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',13,281)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f04d4d21fa8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',13,281)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f04d4d21fa8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 129
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',13,281)
   yacc.py: 366:Action : Shift and goto state 78
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',13,282)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 224
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',13,282)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f04d42e0168> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',13,282)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f04d42e0168>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f04d42f74b0> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',13,282)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IDENTIFIER,'a',14,290)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7f04d42f1398> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 342
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IDENTIFIER,'a',14,290)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f04d42df7f8> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IDENTIFIER,'a',14,290)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f04d42df7f8> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'a',14,290)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f04d42f1050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'a',14,290)
   yacc.py: 366:Action : Shift and goto state 90
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',14,292)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 149
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',14,292)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 138
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 130
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',14,292)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',14,292)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 200
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',14,292)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 199
   yacc.py: 423:Result : <str @ 0x7f04d651c670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',14,292)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(IDENTIFIER,'newmain',14,293)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 240
   yacc.py: 423:Result : <str @ 0x7f04d6459fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 230
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(IDENTIFIER,'newmain',14,293)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator IDENTIFIER . LexToken((,'(',14,300)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['newmain'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f04d4d289f0> ('newmain')
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator QualifiedName . LexToken((,'(',14,300)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with ['newmain'] and goto state 169
   yacc.py: 423:Result : <str @ 0x7f04d4d289f0> ('newmain')
   yacc.py: 337:
   yacc.py: 338:State  : 114
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MethodAccess . LexToken((,'(',14,300)
   yacc.py: 366:Action : Shift and goto state 208
   yacc.py: 337:
   yacc.py: 338:State  : 208
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MethodAccess ( . LexToken(),')',14,301)
   yacc.py: 366:Action : Shift and goto state 285
   yacc.py: 337:
   yacc.py: 338:State  : 285
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MethodAccess ( ) . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( )] with ['newmain','(',')'] and goto state 166
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 104
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MethodCall . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [<dict @ 0x7f04d42f1d70>] and goto state 152
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimaryNoParenthesis . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7f04d42f1d70>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f04d42f1d70>] and goto state 142
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f04d42f1d70>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 130
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 200
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 199
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 146
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 207
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 102
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 214
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 224
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 115
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 132
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f04d42f1d70>] and goto state 238
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7f04d42f1d70>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7f04d42e4c58> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f04d42e4c58>] and goto state 242
   yacc.py: 423:Result : <dict @ 0x7f04d42e4c58> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',14,302)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f04d42e4c58>] and goto state 107
   yacc.py: 423:Result : <dict @ 0x7f04d42e4c58> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 84
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',14,302)
   yacc.py: 366:Action : Shift and goto state 182
   yacc.py: 337:
   yacc.py: 338:State  : 182
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',16,309)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 101
   yacc.py: 462:Result : <dict @ 0x7f04d42db910> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',16,309)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f04d42e4c58>,';',{'instr': 2}] and goto state 96
   yacc.py: 423:Result : <dict @ 0x7f04d42f74b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',16,309)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f04d42f74b0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7f04d42f74b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',16,309)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f04d42f1050>,<dict @ 0x7f04d42f74b0>] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',16,309)
   yacc.py: 366:Action : Shift and goto state 324
   yacc.py: 337:
   yacc.py: 338:State  : 324
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',18,312)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f04d42f1d70>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f04d42f1d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 322
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',18,312)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f04d4ce8710>,'void',<dict @ 0x7f04d42e0b40>,<dict @ 0x7f04d42f1d70>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f04d42e0e88> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations MethodDeclaration . LexToken(},'}',18,312)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f04d42e0e88>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f04d42e0e88> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations FieldDeclaration . LexToken(},'}',18,312)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f04d42e0e88>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f04d42e0e88> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 168
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations FieldDeclarationOptSemi . LexToken(},'}',18,312)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi] with [<dict @ 0x7f04d42dfb40>,<dict @ 0x7f04d42e0e88>] and goto state 46
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 59
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',18,312)
   yacc.py: 366:Action : Shift and goto state 169
   yacc.py: 337:
   yacc.py: 338:State  : 169
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations }] with [<dict @ 0x7f04d42edd70>,'{',None,'}'] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7ffc27e75780> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7ffc2679f8c0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,24)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7ffc2679f8c0>,None,'HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7ffc25d494b0> ({'class': None, 'id': 'HelloWorld', 'mod ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,24)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,31)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7ffc27e75780> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7ffc2679f7a0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,38)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7ffc267e2780> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7ffc2679f7a0>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7ffc2679f7a0> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(VOID,'void',3,45)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { Modifiers VOID . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7ffc267e27e0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7ffc267e27e0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7ffc267e27e0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,54)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ffc27e75780> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 75
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,54)
   yacc.py: 366:Action : Shift and goto state 172
   yacc.py: 337:
   yacc.py: 338:State  : 172
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',3,55)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc267e26c0> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7ffc267e26c0> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',3,61)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',3,62)
   yacc.py: 366:Action : Shift and goto state 178
   yacc.py: 337:
   yacc.py: 338:State  : 178
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 188
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 186
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ffc267e2840> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7ffc25d45e88> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7ffc25d45e88>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7ffc2679fbd8> (['type', 'name'])
   yacc.py: 337:
   yacc.py: 338:State  : 255
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',3,68)
   yacc.py: 366:Action : Shift and goto state 319
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',3,70)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7ffc2679fbd8>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7ffc25d47c58> ({'name': 'main', 'plist': ['type', 'name ...)
   yacc.py: 337:
   yacc.py: 338:State  : 185
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,70)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',10,206)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',10,210)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7ffc266f12d8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',10,210)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7ffc266f12d8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',10,210)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7ffc266f12d8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',10,210)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(,,',',10,211)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(,,',',10,211)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(,,',',10,211)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7ffc25d454b0>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 227
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(,,',',10,211)
   yacc.py: 366:Action : Shift and goto state 171
   yacc.py: 337:
   yacc.py: 338:State  : 171
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , . LexToken(IDENTIFIER,'b',10,212)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , IDENTIFIER . LexToken(;,';',10,213)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['b'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , DeclaratorName . LexToken(;,';',10,213)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['b'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7ffc25d42d70> ({'type': 'int', 'name': 'b'})
   yacc.py: 337:
   yacc.py: 338:State  : 253
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , VariableDeclarator . LexToken(;,';',10,213)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarators , VariableDeclarator] with [{'type': 'int'},',',<dict @ 0x7ffc25d42d70>] and goto state 58
   yacc.py: 423:Result : <dict @ 0x7ffc25d426e0> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 227
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',10,213)
   yacc.py: 366:Action : Shift and goto state 300
   yacc.py: 337:
   yacc.py: 338:State  : 300
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IDENTIFIER,'a',11,220)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d47280> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 337
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IDENTIFIER,'a',11,220)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IDENTIFIER,'a',11,220)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'a',11,220)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'a',11,220)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',11,222)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',11,222)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',11,222)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',11,222)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',11,222)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',11,222)
   yacc.py: 366:Action : Shift and goto state 238
   yacc.py: 337:
   yacc.py: 338:State  : 238
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(INT_LITERAL,'3',11,224)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 234
   yacc.py: 423:Result : <str @ 0x7ffc27ed6fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 236
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'3',11,224)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['3'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7ffc25d454b0>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ffc25d454b0>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ffc25d454b0>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ffc25d454b0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7ffc25d454b0>] and goto state 233
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',11,225)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ffc25d42a28>] and goto state 103
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',11,225)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(IDENTIFIER,'b',12,232)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d44c58> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 262
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(IDENTIFIER,'b',12,232)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ffc25d42a28>,';',{'instr': 2}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'b',12,232)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ffc25d47280>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'b',12,232)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ffc25d49b40>,<dict @ 0x7ffc25d47280>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'b',12,232)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',12,234)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['b'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',12,234)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['b'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',12,234)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['b'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',12,234)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['b'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',12,234)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['b'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',12,234)
   yacc.py: 366:Action : Shift and goto state 238
   yacc.py: 337:
   yacc.py: 338:State  : 238
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(INT_LITERAL,'4',12,236)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 234
   yacc.py: 423:Result : <str @ 0x7ffc27ed6fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 236
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'4',12,236)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['4'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7ffc25d42a28>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ffc25d42a28>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ffc25d42a28>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ffc25d42a28>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['b','=',<dict @ 0x7ffc25d42a28>] and goto state 233
   yacc.py: 423:Result : <dict @ 0x7ffc25d45168> ({'type': 'int', 'tempVar': 'b'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ffc25d45168>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7ffc25d45168> ({'type': 'int', 'tempVar': 'b'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',12,237)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ffc25d45168>] and goto state 103
   yacc.py: 423:Result : <dict @ 0x7ffc25d45168> ({'type': 'int', 'tempVar': 'b'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',12,237)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(FOR,'for',13,244)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d47280> ({'instr': 4})
   yacc.py: 337:
   yacc.py: 338:State  : 262
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(FOR,'for',13,244)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ffc25d45168>,';',{'instr': 4}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(FOR,'for',13,244)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ffc25d48a28>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(FOR,'for',13,244)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ffc25d454b0>,<dict @ 0x7ffc25d48a28>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(FOR,'for',13,244)
   yacc.py: 366:Action : Shift and goto state 113
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR . LexToken((,'(',13,247)
   yacc.py: 366:Action : Shift and goto state 208
   yacc.py: 337:
   yacc.py: 338:State  : 208
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( . LexToken(INT,'int',13,248)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( INT . LexToken(IDENTIFIER,'i',13,252)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7ffc266f1620> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( PrimitiveType . LexToken(IDENTIFIER,'i',13,252)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7ffc266f1620> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeName . LexToken(IDENTIFIER,'i',13,252)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7ffc266f1620> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier . LexToken(IDENTIFIER,'i',13,252)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier IDENTIFIER . LexToken(=,'=',13,253)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['i'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName . LexToken(=,'=',13,253)
   yacc.py: 366:Action : Shift and goto state 173
   yacc.py: 337:
   yacc.py: 338:State  : 173
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = . LexToken(INT_LITERAL,'0',13,254)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = INT_LITERAL . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['0'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = Integer_LIT . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7ffc25d49b40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = ComplexPrimary . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ffc25d49b40>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = NotJustName . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ffc25d49b40>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = PrimaryExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = PostfixExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = LogicalUnaryExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = UnaryExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = CastExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = MultiplicativeExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = AdditiveExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = ShiftExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = RelationalExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = EqualityExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = AndExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = ExclusiveOrExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = InclusiveOrExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = ConditionalAndExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = ConditionalOrExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = ConditionalExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = AssignmentExpression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ffc25d49b40>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = Expression . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [VariableInitializer -> Expression] with [<dict @ 0x7ffc25d49b40>] and goto state 61
   yacc.py: 423:Result : <dict @ 0x7ffc25d49b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier DeclaratorName = VariableInitializer . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName = VariableInitializer] with ['i','=',<dict @ 0x7ffc25d49b40>] and goto state 60
   yacc.py: 423:Result : <dict @ 0x7ffc25d42d70> ({'type': 'int', 'name': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier VariableDeclarator . LexToken(;,';',13,255)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7ffc25d42d70>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7ffc25d454b0> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 227
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier VariableDeclarators . LexToken(;,';',13,255)
   yacc.py: 366:Action : Shift and goto state 300
   yacc.py: 337:
   yacc.py: 338:State  : 300
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier VariableDeclarators ; . LexToken(IDENTIFIER,'i',13,256)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d49b40> ({'instr': 6})
   yacc.py: 337:
   yacc.py: 338:State  : 337
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( TypeSpecifier VariableDeclarators ; M_instr . LexToken(IDENTIFIER,'i',13,256)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 6}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ffc25d44910> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 278
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( LocalVariableDeclarationStatement . LexToken(IDENTIFIER,'i',13,256)
   yacc.py: 389:Action : Reduce rule [ForInit -> LocalVariableDeclarationStatement] with [{}] and goto state 113
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 276
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit . LexToken(IDENTIFIER,'i',13,256)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d445c8> ({'instr': 6})
   yacc.py: 337:
   yacc.py: 338:State  : 322
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr . LexToken(IDENTIFIER,'i',13,256)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr IDENTIFIER . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['i'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr QualifiedName . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['i'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr PrimaryExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['i'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr PostfixExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['i'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr LogicalUnaryExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['i'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr UnaryExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['i'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr CastExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['i'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr MultiplicativeExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['i'] and goto state 206
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr AdditiveExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['i'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ShiftExpression . LexToken(<,'<',13,257)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['i'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7ffc27fb0a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression . LexToken(<,'<',13,257)
   yacc.py: 366:Action : Shift and goto state 214
   yacc.py: 337:
   yacc.py: 338:State  : 214
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < . LexToken(INT_LITERAL,'10',13,258)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < INT_LITERAL . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['10'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < Integer_LIT . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7ffc25d47280>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < ComplexPrimary . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ffc25d47280>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < NotJustName . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ffc25d47280>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < PrimaryExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ffc25d47280>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < PostfixExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ffc25d47280>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < LogicalUnaryExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ffc25d47280>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 201
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < UnaryExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ffc25d47280>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < CastExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ffc25d47280>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < MultiplicativeExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ffc25d47280>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < AdditiveExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ffc25d47280>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7ffc25d47280> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 286
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression < ShiftExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> RelationalExpression < ShiftExpression] with ['i','<',<dict @ 0x7ffc25d47280>] and goto state 212
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr RelationalExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr EqualityExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr AndExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ExclusiveOrExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr InclusiveOrExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ConditionalAndExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ConditionalOrExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ConditionalExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr AssignmentExpression . LexToken(;,';',13,260)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ffc25d48a28>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 346
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr Expression . LexToken(;,';',13,260)
   yacc.py: 366:Action : Shift and goto state 358
   yacc.py: 337:
   yacc.py: 338:State  : 358
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr Expression ; . LexToken(),')',13,261)
   yacc.py: 389:Action : Reduce rule [ForExpr -> Expression ;] with [<dict @ 0x7ffc25d48a28>,';'] and goto state 115
   yacc.py: 423:Result : <dict @ 0x7ffc25d48a28> ({'trueList': [8], 'falseList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 344
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr . LexToken(),')',13,261)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d43e88> ({'instr': 10})
   yacc.py: 337:
   yacc.py: 338:State  : 357
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr . LexToken(),')',13,261)
   yacc.py: 391:Action : Reduce rule [ForIncr -> <empty>] with [] and goto state 118
   yacc.py: 462:Result : <dict @ 0x7ffc25d47280> ({'nList': [10]})
   yacc.py: 337:
   yacc.py: 338:State  : 362
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr . LexToken(),')',13,261)
   yacc.py: 366:Action : Shift and goto state 367
   yacc.py: 337:
   yacc.py: 338:State  : 367
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) . LexToken({,'{',13,262)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d43168> ({'instr': 11})
   yacc.py: 337:
   yacc.py: 338:State  : 370
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr . LexToken({,'{',13,262)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { . LexToken(IDENTIFIER,'a',14,270)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { IDENTIFIER . LexToken(=,'=',14,272)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { QualifiedName . LexToken(=,'=',14,272)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { PrimaryExpression . LexToken(=,'=',14,272)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { PostfixExpression . LexToken(=,'=',14,272)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LogicalUnaryExpression . LexToken(=,'=',14,272)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression . LexToken(=,'=',14,272)
   yacc.py: 366:Action : Shift and goto state 238
   yacc.py: 337:
   yacc.py: 338:State  : 238
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression = . LexToken(IDENTIFIER,'b',14,274)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 234
   yacc.py: 423:Result : <str @ 0x7ffc27ed6fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 236
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator . LexToken(IDENTIFIER,'b',14,274)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator IDENTIFIER . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['b'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator QualifiedName . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['b'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator PrimaryExpression . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['b'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator PostfixExpression . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['b'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['b'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator UnaryExpression . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['b'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator CastExpression . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['b'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(+,'+',14,276)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['b'] and goto state 206
   yacc.py: 423:Result : <str @ 0x7ffc27f99698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(+,'+',14,276)
   yacc.py: 366:Action : Shift and goto state 234
   yacc.py: 337:
   yacc.py: 338:State  : 234
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + . LexToken(INT_LITERAL,'1',14,278)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + INT_LITERAL . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + Integer_LIT . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7ffc25d40050>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + ComplexPrimary . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7ffc25d40050>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + NotJustName . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7ffc25d40050>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + PrimaryExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7ffc25d40050>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + PostfixExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7ffc25d40050>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + LogicalUnaryExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7ffc25d40050>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 201
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + UnaryExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7ffc25d40050>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + CastExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7ffc25d40050>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 305
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression + MultiplicativeExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> AdditiveExpression + MultiplicativeExpression] with ['b','+',<dict @ 0x7ffc25d40050>] and goto state 207
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ffc25d415c8>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7ffc25d415c8>] and goto state 233
   yacc.py: 423:Result : <dict @ 0x7ffc25d41910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { AssignmentExpression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ffc25d41910>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7ffc25d41910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { Expression . LexToken(;,';',14,279)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ffc25d41910>] and goto state 103
   yacc.py: 423:Result : <dict @ 0x7ffc25d41910> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { ExpressionStatement . LexToken(;,';',14,279)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { ExpressionStatement ; . LexToken(IDENTIFIER,'a',15,287)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d41280> ({'instr': 14})
   yacc.py: 337:
   yacc.py: 338:State  : 262
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { ExpressionStatement ; M_instr . LexToken(IDENTIFIER,'a',15,287)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ffc25d41910>,';',{'instr': 14}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7ffc25d406e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { Statement . LexToken(IDENTIFIER,'a',15,287)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ffc25d406e0>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ffc25d406e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'a',15,287)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7ffc25d406e0>] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7ffc25d415c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'a',15,287)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',15,289)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',15,289)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',15,289)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',15,289)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',15,289)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',15,289)
   yacc.py: 366:Action : Shift and goto state 238
   yacc.py: 337:
   yacc.py: 338:State  : 238
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(IDENTIFIER,'a',15,291)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 234
   yacc.py: 423:Result : <str @ 0x7ffc27ed6fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 236
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(IDENTIFIER,'a',15,291)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator IDENTIFIER . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator QualifiedName . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(*,'*',15,292)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(*,'*',15,292)
   yacc.py: 366:Action : Shift and goto state 204
   yacc.py: 337:
   yacc.py: 338:State  : 204
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * . LexToken(IDENTIFIER,'a',15,293)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * IDENTIFIER . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * QualifiedName . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * PrimaryExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * PostfixExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * LogicalUnaryExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 201
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * UnaryExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 271
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression * CastExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> MultiplicativeExpression * CastExpression] with ['a','*','a'] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7ffc25d40a28>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7ffc25d40a28>] and goto state 233
   yacc.py: 423:Result : <dict @ 0x7ffc25fe4e88> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7ffc25fe4e88>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7ffc25fe4e88> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',15,294)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7ffc25fe4e88>] and goto state 103
   yacc.py: 423:Result : <dict @ 0x7ffc25fe4e88> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',15,294)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',16,301)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d40398> ({'instr': 16})
   yacc.py: 337:
   yacc.py: 338:State  : 262
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',16,301)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7ffc25fe4e88>,';',{'instr': 16}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7ffc25d41c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',16,301)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ffc25d41c58>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ffc25d41c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',16,301)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ffc25d415c8>,<dict @ 0x7ffc25d41c58>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements . LexToken(},'}',16,301)
   yacc.py: 366:Action : Shift and goto state 247
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr { LocalVariableDeclarationsAndStatements } . LexToken(INT,'int',17,308)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7ffc25d40a28>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7ffc25d40a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr Block . LexToken(INT,'int',17,308)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d437f8> ({'instr': 16})
   yacc.py: 337:
   yacc.py: 338:State  : 210
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr Block M_instr . LexToken(INT,'int',17,308)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7ffc25d40a28>,{'instr': 16}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7ffc25d40050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 373
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr Statement . LexToken(INT,'int',17,308)
   yacc.py: 389:Action : Reduce rule [IterationStatement -> FOR ( ForInit M_instr ForExpr M_instr ForIncr ) M_instr Statement] with ['for','(',None,{'instr': 6},<dict @ 0x7ffc25d48a28>,{'instr': 10},{'nList': [10]},')',{'instr': 11},<dict @ 0x7ffc25d40050>] and goto state 111
   yacc.py: 423:Result : <dict @ 0x7ffc25d41280> ({'nList': [9]})
   yacc.py: 337:
   yacc.py: 338:State  : 169
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement . LexToken(INT,'int',17,308)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d42050> ({'instr': 17})
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement M_instr . LexToken(INT,'int',17,308)
   yacc.py: 389:Action : Reduce rule [Statement -> IterationStatement M_instr] with [{'nList': [9]},{'instr': 17}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7ffc25d40d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(INT,'int',17,308)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7ffc25d40d70>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7ffc25d40d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(INT,'int',17,308)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ffc25d42a28>,<dict @ 0x7ffc25d40d70>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7ffc25d45168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(INT,'int',17,308)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements INT . LexToken(IDENTIFIER,'c',17,312)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7ffc266f14e0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimitiveType . LexToken(IDENTIFIER,'c',17,312)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7ffc266f14e0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeName . LexToken(IDENTIFIER,'c',17,312)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7ffc266f14e0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier . LexToken(IDENTIFIER,'c',17,312)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier IDENTIFIER . LexToken(=,'=',17,314)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['c'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7ffc27f99c88> ('c')
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName . LexToken(=,'=',17,314)
   yacc.py: 366:Action : Shift and goto state 173
   yacc.py: 337:
   yacc.py: 338:State  : 173
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = . LexToken(IDENTIFIER,'a',17,316)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = IDENTIFIER . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = QualifiedName . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = PrimaryExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = PostfixExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = LogicalUnaryExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = UnaryExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = CastExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = MultiplicativeExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 206
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AdditiveExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['a'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ShiftExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['a'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = RelationalExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with ['a'] and goto state 216
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = EqualityExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with ['a'] and goto state 219
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AndExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with ['a'] and goto state 221
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ExclusiveOrExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with ['a'] and goto state 223
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = InclusiveOrExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with ['a'] and goto state 225
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalAndExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with ['a'] and goto state 227
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalOrExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with ['a'] and goto state 230
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = ConditionalExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with ['a'] and goto state 232
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = AssignmentExpression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with ['a'] and goto state 236
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = Expression . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [VariableInitializer -> Expression] with ['a'] and goto state 61
   yacc.py: 423:Result : <str @ 0x7ffc27f99670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier DeclaratorName = VariableInitializer . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName = VariableInitializer] with ['c','=','a'] and goto state 60
   yacc.py: 423:Result : <dict @ 0x7ffc25d40d70> ({'type': 'int', 'name': 'c'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarator . LexToken(;,';',17,317)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7ffc25d40d70>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 227
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators . LexToken(;,';',17,317)
   yacc.py: 366:Action : Shift and goto state 300
   yacc.py: 337:
   yacc.py: 338:State  : 300
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators ; . LexToken(},'}',18,319)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7ffc25d426e0> ({'instr': 18})
   yacc.py: 337:
   yacc.py: 338:State  : 337
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements TypeSpecifier VariableDeclarators ; M_instr . LexToken(},'}',18,319)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 18}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7ffc25d457f8> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationStatement . LexToken(},'}',18,319)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7ffc25d457f8> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',18,319)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7ffc25d45168>,{}] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7ffc25d445c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',18,319)
   yacc.py: 366:Action : Shift and goto state 247
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',19,321)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7ffc25d445c8>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7ffc25d445c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 177
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator Block . LexToken(},'}',19,321)
   yacc.py: 389:Action : Reduce rule [MethodBody -> Block] with [<dict @ 0x7ffc25d445c8>] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7ffc25d445c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',19,321)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7ffc2679f7a0>,'void',<dict @ 0x7ffc25d47c58>,<dict @ 0x7ffc25d445c8>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 55
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(},'}',19,321)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7ffc25d42a28>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 67
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(},'}',19,321)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7ffc25d42a28>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(},'}',19,321)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7ffc25d42a28>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7ffc25d42a28> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',19,321)
   yacc.py: 366:Action : Shift and goto state 86
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations }] with [<dict @ 0x7ffc25d494b0>,'{',<dict @ 0x7ffc25d42a28>,'}'] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f46d5e15f30> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f46d5dfb638> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'employee',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <str @ 0x7f46d5e3f240> ('class')
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'employee',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,21)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7f46d5dfb638>,'class','employee'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7f46d55165c8> ({'class': 'class', 'id': 'employee', 'mo ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,21)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(INT,'int',2,25)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : ClassHeader { INT . LexToken(IDENTIFIER,'a',2,29)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f46d5e34350> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { PrimitiveType . LexToken(IDENTIFIER,'a',2,29)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e34350> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { TypeName . LexToken(IDENTIFIER,'a',2,29)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e34350> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 51
   yacc.py: 352:Stack  : ClassHeader { TypeSpecifier . LexToken(IDENTIFIER,'a',2,29)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { TypeSpecifier IDENTIFIER . LexToken(;,';',2,31)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d75ea670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { TypeSpecifier DeclaratorName . LexToken(;,';',2,31)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f46d551c6e0> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { TypeSpecifier VariableDeclarator . LexToken(;,';',2,31)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f46d551c6e0>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 76
   yacc.py: 352:Stack  : ClassHeader { TypeSpecifier VariableDeclarators . LexToken(;,';',2,31)
   yacc.py: 389:Action : Reduce rule [FieldVariableDeclaration -> TypeSpecifier VariableDeclarators] with ['int',{'type': 'int'}] and goto state 56
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 43
   yacc.py: 352:Stack  : ClassHeader { FieldVariableDeclaration . LexToken(;,';',2,31)
   yacc.py: 366:Action : Shift and goto state 74
   yacc.py: 337:
   yacc.py: 338:State  : 74
   yacc.py: 352:Stack  : ClassHeader { FieldVariableDeclaration ; . LexToken(PUBLIC,'public',6,72)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> FieldVariableDeclaration ;] with [None,';'] and goto state 49
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 69
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(PUBLIC,'public',6,72)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [None] and goto state 47
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(PUBLIC,'public',6,72)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [None] and goto state 45
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(PUBLIC,'public',6,72)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations PUBLIC . LexToken(INT,'int',6,79)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f46d5e15f30> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifier . LexToken(INT,'int',6,79)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f46d5dfb830> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers . LexToken(INT,'int',6,79)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers INT . LexToken(IDENTIFIER,'hello',6,83)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f46d5e34080> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers PrimitiveType . LexToken(IDENTIFIER,'hello',6,83)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e34080> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeName . LexToken(IDENTIFIER,'hello',6,83)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e34080> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 166
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier . LexToken(IDENTIFIER,'hello',6,83)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',6,88)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['hello'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d5e3f2d0> ('hello')
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',6,88)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( . LexToken(),')',6,89)
   yacc.py: 366:Action : Shift and goto state 257
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ) . LexToken({,'{',6,90)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( )] with ['hello','(',')'] and goto state 68
   yacc.py: 423:Result : <dict @ 0x7f46d55217f8> ({'name': 'hello', 'plist': []})
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',6,90)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { . LexToken(RETURN,'return',7,96)
   yacc.py: 366:Action : Shift and goto state 98
   yacc.py: 337:
   yacc.py: 338:State  : 98
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN . LexToken(INT_LITERAL,'1',7,103)
   yacc.py: 366:Action : Shift and goto state 144
   yacc.py: 337:
   yacc.py: 338:State  : 144
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN INT_LITERAL . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN Integer_LIT . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f46d5511b40>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN ComplexPrimary . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f46d5511b40>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN NotJustName . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f46d5511b40>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN PrimaryExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f46d5511b40>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN PostfixExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f46d5511b40>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN LogicalUnaryExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f46d5511b40>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN UnaryExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f46d5511b40>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN CastExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f46d5511b40>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN MultiplicativeExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f46d5511b40>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN AdditiveExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f46d5511b40>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN ShiftExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f46d5511b40>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN RelationalExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f46d5511b40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN EqualityExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f46d5511b40>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN AndExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f46d5511b40>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN ExclusiveOrExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f46d5511b40>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN InclusiveOrExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f46d5511b40>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN ConditionalAndExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f46d5511b40>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN ConditionalOrExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f46d5511b40>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN ConditionalExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f46d5511b40>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN AssignmentExpression . LexToken(;,';',7,104)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f46d5511b40>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 194
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN Expression . LexToken(;,';',7,104)
   yacc.py: 366:Action : Shift and goto state 270
   yacc.py: 337:
   yacc.py: 338:State  : 270
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { RETURN Expression ; . LexToken(},'}',8,108)
   yacc.py: 389:Action : Reduce rule [JumpStatement -> RETURN Expression ;] with ['return',<dict @ 0x7f46d5511b40>,';'] and goto state 132
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { JumpStatement . LexToken(},'}',8,108)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f46d5521168> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 220
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { JumpStatement M_instr . LexToken(},'}',8,108)
   yacc.py: 389:Action : Reduce rule [Statement -> JumpStatement M_instr] with [None,{'instr': 2}] and goto state 101
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { Statement . LexToken(},'}',8,108)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f46d5511b40>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(},'}',8,108)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f46d5511b40>] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f46d5512d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',8,108)
   yacc.py: 366:Action : Shift and goto state 325
   yacc.py: 337:
   yacc.py: 338:State  : 325
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',10,111)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f46d5512d70>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f46d5512d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 320
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',10,111)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f46d5dfb830>,'int',<dict @ 0x7f46d55217f8>,<dict @ 0x7f46d5512d70>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f46d5514910> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations MethodDeclaration . LexToken(},'}',10,111)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f46d5514910>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f46d5514910> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 69
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations FieldDeclaration . LexToken(},'}',10,111)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f46d5514910>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f46d5514910> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 169
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations FieldDeclarationOptSemi . LexToken(},'}',10,111)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi] with [None,<dict @ 0x7f46d5514910>] and goto state 46
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',10,111)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . LexToken(PUBLIC,'public',11,113)
   yacc.py: 389:Action : Reduce rule [Rparen -> }] with ['}'] and goto state 90
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 168
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Rparen . LexToken(PUBLIC,'public',11,113)
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations Rparen] with [<dict @ 0x7f46d55165c8>,'{',None,None] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . LexToken(PUBLIC,'public',11,113)
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . LexToken(PUBLIC,'public',11,113)
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . LexToken(PUBLIC,'public',11,113)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : TypeDeclarations PUBLIC . LexToken(CLASS,'class',11,120)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f46d5e15f30> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : TypeDeclarations Modifier . LexToken(CLASS,'class',11,120)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f46d5dfbb48> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : TypeDeclarations Modifiers . LexToken(CLASS,'class',11,120)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : TypeDeclarations Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',11,126)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <str @ 0x7f46d5e3f2a0> ('class')
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : TypeDeclarations Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',11,126)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : TypeDeclarations Modifiers ClassWord IDENTIFIER . LexToken({,'{',11,137)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7f46d5dfbb48>,'class','HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7f46d5514c58> ({'class': 'class', 'id': 'HelloWorld', ' ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader . LexToken({,'{',11,137)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { . LexToken(PUBLIC,'public',13,145)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { PUBLIC . LexToken(STATIC,'static',13,152)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f46d5e15f30> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifier . LexToken(STATIC,'static',13,152)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f46d5dfba70> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers . LexToken(STATIC,'static',13,152)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers STATIC . LexToken(INT,'int',13,159)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f46d5e3f270> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers Modifier . LexToken(INT,'int',13,159)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f46d5dfba70>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f46d5dfba70> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers . LexToken(INT,'int',13,159)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers INT . LexToken(IDENTIFIER,'hello',13,163)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f46d5e340d0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'hello',13,163)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e340d0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'hello',13,163)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e340d0> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 166
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'hello',13,163)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',13,168)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['hello'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d5e15f30> ('hello')
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',13,168)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(INT,'int',13,169)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( INT . LexToken(IDENTIFIER,'b',13,173)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f46d5e340f8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( PrimitiveType . LexToken(IDENTIFIER,'b',13,173)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e340f8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken(IDENTIFIER,'b',13,173)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e340f8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 248
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'b',13,173)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(,,',',13,174)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['b'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d75ea698> ('b')
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(,,',',13,174)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with ['int','b'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f46d5512d70> ({'type': 'int', 'name': 'b'})
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(,,',',13,174)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7f46d5512d70>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7f46d5469320> ([{'type': 'int', 'name': 'b'}])
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(,,',',13,174)
   yacc.py: 366:Action : Shift and goto state 319
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , . LexToken(INT,'int',13,176)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , INT . LexToken(IDENTIFIER,'c',13,180)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f46d5e34120> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , PrimitiveType . LexToken(IDENTIFIER,'c',13,180)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e34120> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeName . LexToken(IDENTIFIER,'c',13,180)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e34120> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 248
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeSpecifier . LexToken(IDENTIFIER,'c',13,180)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeSpecifier IDENTIFIER . LexToken(,,',',13,181)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['c'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d75eac88> ('c')
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeSpecifier DeclaratorName . LexToken(,,',',13,181)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with ['int','c'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f46d5511b40> ({'type': 'int', 'name': 'c'})
   yacc.py: 337:
   yacc.py: 338:State  : 352
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , Parameter . LexToken(,,',',13,181)
   yacc.py: 389:Action : Reduce rule [ParameterList -> ParameterList , Parameter] with [<list @ 0x7f46d5469320>,',',<dict @ 0x7f46d5511b40>] and goto state 70
   yacc.py: 423:Result : <list @ 0x7f46d5469320> ([{'type': 'int', 'name': 'b'}, {'type':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(,,',',13,181)
   yacc.py: 366:Action : Shift and goto state 319
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , . LexToken(BOOLEAN,'boolean',13,183)
   yacc.py: 366:Action : Shift and goto state 67
   yacc.py: 337:
   yacc.py: 338:State  : 67
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , BOOLEAN . LexToken(IDENTIFIER,'d',13,191)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> BOOLEAN] with ['boolean'] and goto state 8
   yacc.py: 423:Result : <str @ 0x7f46d5e3f1e0> ('boolean')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , PrimitiveType . LexToken(IDENTIFIER,'d',13,191)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['boolean'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e3f1e0> ('boolean')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeName . LexToken(IDENTIFIER,'d',13,191)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['boolean'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e3f1e0> ('boolean')
   yacc.py: 337:
   yacc.py: 338:State  : 248
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeSpecifier . LexToken(IDENTIFIER,'d',13,191)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeSpecifier IDENTIFIER . LexToken(),')',13,192)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['d'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d7601710> ('d')
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , TypeSpecifier DeclaratorName . LexToken(),')',13,192)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with ['boolean','d'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f46d551ec58> ({'type': 'boolean', 'name': 'd'})
   yacc.py: 337:
   yacc.py: 338:State  : 352
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList , Parameter . LexToken(),')',13,192)
   yacc.py: 389:Action : Reduce rule [ParameterList -> ParameterList , Parameter] with [<list @ 0x7f46d5469320>,',',<dict @ 0x7f46d551ec58>] and goto state 70
   yacc.py: 423:Result : <list @ 0x7f46d5469320> ([{'type': 'int', 'name': 'b'}, {'type':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',13,192)
   yacc.py: 366:Action : Shift and goto state 324
   yacc.py: 337:
   yacc.py: 338:State  : 324
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',13,194)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['hello','(',<list @ 0x7f46d5469320>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7f46d5520e88> ({'name': 'hello', 'plist': [{'type': 'in ...)
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',13,194)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',14,202)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',14,206)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f46d5e34148> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',14,206)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e34148> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',14,206)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e34148> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 130
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',14,206)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',14,208)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d75ea670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 224
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',14,208)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',14,208)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f46d5513d70>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f46d551c398> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',14,208)
   yacc.py: 366:Action : Shift and goto state 299
   yacc.py: 337:
   yacc.py: 338:State  : 299
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(RETURN,'return',15,216)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f46d5513050> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 345
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(RETURN,'return',15,216)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7f46d75175c8> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(RETURN,'return',15,216)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f46d75175c8> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(RETURN,'return',15,216)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f46d5522c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(RETURN,'return',15,216)
   yacc.py: 366:Action : Shift and goto state 98
   yacc.py: 337:
   yacc.py: 338:State  : 98
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN . LexToken(INT_LITERAL,'2',15,223)
   yacc.py: 366:Action : Shift and goto state 144
   yacc.py: 337:
   yacc.py: 338:State  : 144
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN INT_LITERAL . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['2'] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN Integer_LIT . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f46d5513d70>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN ComplexPrimary . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f46d5513d70>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN NotJustName . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f46d5513d70>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN PrimaryExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f46d5513d70>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN PostfixExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f46d5513d70>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN LogicalUnaryExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f46d5513d70>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN UnaryExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f46d5513d70>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN CastExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f46d5513d70>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN MultiplicativeExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f46d5513d70>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN AdditiveExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f46d5513d70>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN ShiftExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f46d5513d70>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN RelationalExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f46d5513d70>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN EqualityExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f46d5513d70>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN AndExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f46d5513d70>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN ExclusiveOrExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f46d5513d70>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN InclusiveOrExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f46d5513d70>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN ConditionalAndExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f46d5513d70>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN ConditionalOrExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f46d5513d70>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN ConditionalExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f46d5513d70>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN AssignmentExpression . LexToken(;,';',15,224)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f46d5513d70>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 194
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN Expression . LexToken(;,';',15,224)
   yacc.py: 366:Action : Shift and goto state 270
   yacc.py: 337:
   yacc.py: 338:State  : 270
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RETURN Expression ; . LexToken(},'}',16,230)
   yacc.py: 389:Action : Reduce rule [JumpStatement -> RETURN Expression ;] with ['return',<dict @ 0x7f46d5513d70>,';'] and goto state 132
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements JumpStatement . LexToken(},'}',16,230)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f46d55136e0> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 220
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements JumpStatement M_instr . LexToken(},'}',16,230)
   yacc.py: 389:Action : Reduce rule [Statement -> JumpStatement M_instr] with [None,{'instr': 2}] and goto state 101
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',16,230)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f46d5513d70>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f46d5513d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',16,230)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f46d5522c58>,<dict @ 0x7f46d5513d70>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7f46d55145c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',16,230)
   yacc.py: 366:Action : Shift and goto state 325
   yacc.py: 337:
   yacc.py: 338:State  : 325
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(PUBLIC,'public',18,237)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f46d55145c8>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f46d55145c8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 320
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(PUBLIC,'public',18,237)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f46d5dfba70>,'int',<dict @ 0x7f46d5520e88>,<dict @ 0x7f46d55145c8>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f46d5512a28> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { MethodDeclaration . LexToken(PUBLIC,'public',18,237)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f46d5512a28>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f46d5512a28> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 69
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclaration . LexToken(PUBLIC,'public',18,237)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f46d5512a28>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f46d5512a28> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarationOptSemi . LexToken(PUBLIC,'public',18,237)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7f46d5512a28>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7f46d5512a28> ({'type': 'int', 'method': {'name': 'hell ...)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations . LexToken(PUBLIC,'public',18,237)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations PUBLIC . LexToken(STATIC,'static',18,244)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f46d5e3f210> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifier . LexToken(STATIC,'static',18,244)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f46d5dfb8c0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers . LexToken(STATIC,'static',18,244)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers STATIC . LexToken(VOID,'void',18,251)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f46d5e3f3c0> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers Modifier . LexToken(VOID,'void',18,251)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f46d5dfb8c0>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f46d5dfb8c0> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers . LexToken(VOID,'void',18,251)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers VOID . LexToken(IDENTIFIER,'main',18,256)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7f46d5e3f360> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',18,256)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f46d5e3f360> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeName . LexToken(IDENTIFIER,'main',18,256)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e3f360> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 166
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',18,256)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',18,260)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d5e3f210> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',18,260)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',18,261)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',18,267)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f46d5e3f180> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',18,267)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f46d5e3f180> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',18,267)
   yacc.py: 366:Action : Shift and goto state 81
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',18,268)
   yacc.py: 366:Action : Shift and goto state 180
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',18,270)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 195
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 82
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',18,270)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 193
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',18,270)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 248
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',18,270)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',18,274)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d5e3f3f0> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',18,274)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f46d5522c58> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',18,274)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7f46d5522c58>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7f46d54c4f80> ([{'type': None, 'name': 'args'}])
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',18,274)
   yacc.py: 366:Action : Shift and goto state 324
   yacc.py: 337:
   yacc.py: 338:State  : 324
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',18,276)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7f46d54c4f80>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7f46d55225c8> ({'name': 'main', 'plist': [{'type': None ...)
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',18,276)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { . LexToken(IDENTIFIER,'employee',28,517)
   yacc.py: 366:Action : Shift and goto state 91
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { IDENTIFIER . LexToken(IDENTIFIER,'abc',28,526)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['employee'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f46d5e3f240> ('employee')
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { QualifiedName . LexToken(IDENTIFIER,'abc',28,526)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['employee'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f46d5e3f240> ('employee')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'abc',28,526)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['employee'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f46d5e3f240> ('employee')
   yacc.py: 337:
   yacc.py: 338:State  : 130
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'abc',28,526)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(=,'=',28,530)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['abc'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f46d5e34198> ('abc')
   yacc.py: 337:
   yacc.py: 338:State  : 224
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(=,'=',28,530)
   yacc.py: 366:Action : Shift and goto state 175
   yacc.py: 337:
   yacc.py: 338:State  : 175
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = . LexToken(NEW,'new',28,532)
   yacc.py: 366:Action : Shift and goto state 128
   yacc.py: 337:
   yacc.py: 338:State  : 128
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NEW . LexToken(IDENTIFIER,'employee',28,536)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NEW IDENTIFIER . LexToken((,'(',28,544)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['employee'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f46d5e3f390> ('employee')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NEW QualifiedName . LexToken((,'(',28,544)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['employee'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f46d5e3f390> ('employee')
   yacc.py: 337:
   yacc.py: 338:State  : 222
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NEW TypeName . LexToken((,'(',28,544)
   yacc.py: 366:Action : Shift and goto state 294
   yacc.py: 337:
   yacc.py: 338:State  : 294
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NEW TypeName ( . LexToken(),')',28,545)
   yacc.py: 366:Action : Shift and goto state 341
   yacc.py: 337:
   yacc.py: 338:State  : 341
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NEW TypeName ( ) . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [ClassAllocationExpression -> NEW TypeName ( )] with ['new','employee','(',')'] and goto state 186
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ClassAllocationExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [PlainNewAllocationExpression -> ClassAllocationExpression] with [<dict @ 0x7f46d55154b0>] and goto state 180
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 118
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = PlainNewAllocationExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [NewAllocationExpression -> PlainNewAllocationExpression] with [<dict @ 0x7f46d55154b0>] and goto state 177
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NewAllocationExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [NotJustName -> NewAllocationExpression] with [<dict @ 0x7f46d55154b0>] and goto state 143
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = NotJustName . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f46d55154b0>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = PrimaryExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f46d55154b0>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = PostfixExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f46d55154b0>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = LogicalUnaryExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f46d55154b0>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = UnaryExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f46d55154b0>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = CastExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f46d55154b0>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = MultiplicativeExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f46d55154b0>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = AdditiveExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f46d55154b0>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ShiftExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f46d55154b0>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = RelationalExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f46d55154b0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = EqualityExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f46d55154b0>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = AndExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f46d55154b0>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ExclusiveOrExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f46d55154b0>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = InclusiveOrExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f46d55154b0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ConditionalAndExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f46d55154b0>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ConditionalOrExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f46d55154b0>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = ConditionalExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f46d55154b0>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = AssignmentExpression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f46d55154b0>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 260
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = Expression . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [VariableInitializer -> Expression] with [<dict @ 0x7f46d55154b0>] and goto state 61
   yacc.py: 423:Result : <dict @ 0x7f46d55154b0> ({'type': 'employee', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 259
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName = VariableInitializer . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName = VariableInitializer] with ['abc','=',<dict @ 0x7f46d55154b0>] and goto state 60
   yacc.py: 423:Result : <dict @ 0x7f46d5526d70> ({'type': 'employee', 'name': 'abc'})
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',28,546)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f46d5526d70>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f46d75175c8> ({'type': 'employee'})
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',28,546)
   yacc.py: 366:Action : Shift and goto state 299
   yacc.py: 337:
   yacc.py: 338:State  : 299
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(},'}',55,1041)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f46d55154b0> ({'instr': 5})
   yacc.py: 337:
   yacc.py: 338:State  : 345
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(},'}',55,1041)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['employee',<dict @ 0x7f46d75175c8>,';',{'instr': 5}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7f46d55126e0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(},'}',55,1041)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f46d55126e0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(},'}',55,1041)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f46d5513a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',55,1041)
   yacc.py: 366:Action : Shift and goto state 325
   yacc.py: 337:
   yacc.py: 338:State  : 325
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',59,1111)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f46d5513a28>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f46d5513a28> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 320
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',59,1111)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f46d5dfb8c0>,'void',<dict @ 0x7f46d55225c8>,<dict @ 0x7f46d5513a28>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f46d55145c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations MethodDeclaration . LexToken(},'}',59,1111)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f46d55145c8>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f46d55145c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 69
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations FieldDeclaration . LexToken(},'}',59,1111)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f46d55145c8>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f46d55145c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 169
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations FieldDeclarationOptSemi . LexToken(},'}',59,1111)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi] with [<dict @ 0x7f46d5512a28>,<dict @ 0x7f46d55145c8>] and goto state 46
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations . LexToken(},'}',59,1111)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [Rparen -> }] with ['}'] and goto state 90
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 168
   yacc.py: 352:Stack  : TypeDeclarations ClassHeader { FieldDeclarations Rparen . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations Rparen] with [<dict @ 0x7f46d5514c58>,'{',None,None] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclarations TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 32
   yacc.py: 352:Stack  : TypeDeclarations TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi] with [None,None] and goto state 25
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

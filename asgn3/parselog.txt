   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f49ae64af90> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f49ae5ae878> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,24)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7f49ae5ae878>,None,'HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7f49adb99e88> ({'class': None, 'id': 'HelloWorld', 'mod ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,24)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,31)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f49ae64af90> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,38)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f49ae5ae908> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,38)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f49ae5edde0> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(VOID,'void',3,45)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f49ae5ae908>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f49ae5ae908> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(VOID,'void',3,45)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { Modifiers VOID . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7f49ae5edd50> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f49ae5edd50> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f49ae5edd50> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',3,50)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,54)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f49ae64af90> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 75
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,54)
   yacc.py: 366:Action : Shift and goto state 172
   yacc.py: 337:
   yacc.py: 338:State  : 172
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',3,55)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f49ae5edc30> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',3,61)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f49ae5edc30> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',3,61)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',3,62)
   yacc.py: 366:Action : Shift and goto state 178
   yacc.py: 337:
   yacc.py: 338:State  : 178
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 188
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 186
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',3,64)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f49ae5eddb0> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f49adb9a910> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',3,68)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7f49adb9a910>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7f49ae5aebd8> (['type', 'name'])
   yacc.py: 337:
   yacc.py: 338:State  : 255
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',3,68)
   yacc.py: 366:Action : Shift and goto state 319
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',3,70)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7f49ae5aebd8>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7f49adb9b6e0> ({'name': 'main', 'plist': ['type', 'name ...)
   yacc.py: 337:
   yacc.py: 338:State  : 185
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,70)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',8,147)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',8,151)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f49afcb52d8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',8,151)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f49afcb52d8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',8,151)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f49afcb52d8> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',8,151)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',8,152)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',8,152)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f49adb98e88> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',8,152)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f49adb98e88>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f49adb9c5c8> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 227
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',8,152)
   yacc.py: 366:Action : Shift and goto state 300
   yacc.py: 337:
   yacc.py: 338:State  : 300
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IDENTIFIER,'a',9,158)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f49adb98168> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 337
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IDENTIFIER,'a',9,158)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7f49adb994b0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IDENTIFIER,'a',9,158)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7f49adb994b0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'a',9,158)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7f49adb97d70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'a',9,158)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',9,160)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',9,160)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',9,160)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',9,160)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',9,160)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',9,160)
   yacc.py: 366:Action : Shift and goto state 238
   yacc.py: 337:
   yacc.py: 338:State  : 238
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken((,'(',9,162)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 234
   yacc.py: 423:Result : <str @ 0x7f49afd25fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 236
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken((,'(',9,162)
   yacc.py: 366:Action : Shift and goto state 94
   yacc.py: 337:
   yacc.py: 338:State  : 94
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( . LexToken(IDENTIFIER,'a',9,164)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( IDENTIFIER . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['a'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 192
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( QualifiedName . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['a'] and goto state 133
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( PrimaryExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['a'] and goto state 189
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( PostfixExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['a'] and goto state 195
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( LogicalUnaryExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['a'] and goto state 194
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( UnaryExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['a'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( CastExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['a'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( MultiplicativeExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['a'] and goto state 206
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( AdditiveExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['a'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ShiftExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['a'] and goto state 211
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( RelationalExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with ['a'] and goto state 216
   yacc.py: 423:Result : <str @ 0x7f49afde8670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression . LexToken(OP_EQ,'==',9,166)
   yacc.py: 366:Action : Shift and goto state 203
   yacc.py: 337:
   yacc.py: 338:State  : 203
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ . LexToken(INT_LITERAL,'1',9,169)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ INT_LITERAL . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ Integer_LIT . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f49adb984b0>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ ComplexPrimary . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f49adb984b0>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ NotJustName . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f49adb984b0>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ PrimaryExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f49adb984b0>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ PostfixExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f49adb984b0>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ LogicalUnaryExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f49adb984b0>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 201
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ UnaryExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f49adb984b0>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ CastExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f49adb984b0>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ MultiplicativeExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f49adb984b0>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ AdditiveExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f49adb984b0>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ ShiftExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f49adb984b0>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 270
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression OP_EQ RelationalExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> EqualityExpression OP_EQ RelationalExpression] with ['a','==',<dict @ 0x7f49adb984b0>] and goto state 217
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( EqualityExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f49adb976e0>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( AndExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f49adb976e0>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ExclusiveOrExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f49adb976e0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( InclusiveOrExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f49adb976e0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ConditionalAndExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f49adb976e0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ConditionalOrExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f49adb976e0>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( ConditionalExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f49adb976e0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( AssignmentExpression . LexToken(),')',9,170)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f49adb976e0>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 191
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( Expression . LexToken(),')',9,170)
   yacc.py: 366:Action : Shift and goto state 265
   yacc.py: 337:
   yacc.py: 338:State  : 265
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ( Expression ) . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ( Expression )] with ['(',<dict @ 0x7f49adb976e0>,')'] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f49adb976e0>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f49adb976e0>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f49adb976e0>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f49adb976e0>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f49adb976e0>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f49adb976e0>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f49adb976e0>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f49adb976e0>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f49adb976e0>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f49adb976e0>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f49adb976e0>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f49adb976e0>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f49adb976e0>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f49adb976e0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f49adb976e0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(?,'?',9,172)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f49adb976e0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'trueList': [2], 'falseList': [3]})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(?,'?',9,172)
   yacc.py: 366:Action : Shift and goto state 233
   yacc.py: 337:
   yacc.py: 338:State  : 233
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? . LexToken(INT_LITERAL,'2',9,174)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f49adb98168> ({'instr': 4})
   yacc.py: 337:
   yacc.py: 338:State  : 304
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr . LexToken(INT_LITERAL,'2',9,174)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr INT_LITERAL . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['2'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Integer_LIT . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f49adb98b40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ComplexPrimary . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f49adb98b40>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr NotJustName . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f49adb98b40>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr PrimaryExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f49adb98b40>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr PostfixExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f49adb98b40>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr LogicalUnaryExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f49adb98b40>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr UnaryExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f49adb98b40>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr CastExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f49adb98b40>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr MultiplicativeExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f49adb98b40>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr AdditiveExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f49adb98b40>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ShiftExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f49adb98b40>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr RelationalExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f49adb98b40>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr EqualityExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f49adb98b40>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr AndExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f49adb98b40>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ExclusiveOrExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f49adb98b40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr InclusiveOrExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f49adb98b40>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ConditionalAndExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f49adb98b40>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ConditionalOrExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f49adb98b40>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr ConditionalExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f49adb98b40>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr AssignmentExpression . LexToken(:,':',9,176)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f49adb98b40>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f49adb98b40> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 340
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression . LexToken(:,':',9,176)
   yacc.py: 366:Action : Shift and goto state 354
   yacc.py: 337:
   yacc.py: 338:State  : 354
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : . LexToken(INT_LITERAL,'3',9,178)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f49adb94910> ({'instr': 5})
   yacc.py: 337:
   yacc.py: 338:State  : 360
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr . LexToken(INT_LITERAL,'3',9,178)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr INT_LITERAL . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['3'] and goto state 148
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr Integer_LIT . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f49adb97050>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 125
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ComplexPrimary . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f49adb97050>] and goto state 137
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr NotJustName . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f49adb97050>] and goto state 134
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr PrimaryExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f49adb97050>] and goto state 189
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr PostfixExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f49adb97050>] and goto state 195
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr LogicalUnaryExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f49adb97050>] and goto state 194
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 201
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr UnaryExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f49adb97050>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr CastExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f49adb97050>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr MultiplicativeExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f49adb97050>] and goto state 206
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr AdditiveExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f49adb97050>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ShiftExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f49adb97050>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr RelationalExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f49adb97050>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 105
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr EqualityExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f49adb97050>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr AndExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f49adb97050>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ExclusiveOrExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f49adb97050>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr InclusiveOrExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f49adb97050>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 99
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ConditionalAndExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f49adb97050>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ConditionalOrExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f49adb97050>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f49adb97050> ({'type': 'int', 'tempVar': '_t3'})
   yacc.py: 337:
   yacc.py: 338:State  : 366
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ConditionalExpression . LexToken(;,';',9,180)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f49adb96b40> ({'instr': 6})
   yacc.py: 337:
   yacc.py: 338:State  : 370
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression ? M_instr Expression : M_instr ConditionalExpression M_instr . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression ? M_instr Expression : M_instr ConditionalExpression M_instr] with [<dict @ 0x7f49adb976e0>,'?',{'instr': 4},<dict @ 0x7f49adb98b40>,':',{'instr': 5},<dict @ 0x7f49adb97050>,{'instr': 6}] and goto state 231
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f49adb984b0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 307
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['a','=',<dict @ 0x7f49adb984b0>] and goto state 233
   yacc.py: 423:Result : <dict @ 0x7f49adb967f8> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f49adb967f8>] and goto state 236
   yacc.py: 423:Result : <dict @ 0x7f49adb967f8> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',9,180)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f49adb967f8>] and goto state 103
   yacc.py: 423:Result : <dict @ 0x7f49adb967f8> ({'type': 'int', 'tempVar': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',9,180)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',22,409)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7f49adb964b0> ({'instr': 10})
   yacc.py: 337:
   yacc.py: 338:State  : 262
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',22,409)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f49adb967f8>,';',{'instr': 10}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',22,409)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f49adb976e0>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7f49adb976e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',22,409)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f49adb97d70>,<dict @ 0x7f49adb976e0>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',22,409)
   yacc.py: 366:Action : Shift and goto state 247
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',23,411)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f49adb984b0>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 177
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator Block . LexToken(},'}',23,411)
   yacc.py: 389:Action : Reduce rule [MethodBody -> Block] with [<dict @ 0x7f49adb984b0>] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f49adb984b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',23,411)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f49ae5ae908>,'void',<dict @ 0x7f49adb9b6e0>,<dict @ 0x7f49adb984b0>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f49adb945c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 55
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(},'}',23,411)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f49adb945c8>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f49adb945c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 67
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(},'}',23,411)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f49adb945c8>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f49adb945c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(},'}',23,411)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7f49adb945c8>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7f49adb945c8> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',23,411)
   yacc.py: 366:Action : Shift and goto state 86
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations }] with [<dict @ 0x7f49adb99e88>,'{',<dict @ 0x7f49adb945c8>,'}'] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7fc9370372d0> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7fc93701b4d0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'HelloWorld',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,24)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7fc93701b4d0>,None,'HelloWorld'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7fc9365c6910> ({'class': None, 'id': 'HelloWorld', 'mod ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,24)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,32)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,39)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7fc9370372d0> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,39)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7fc93701b518> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,39)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(VOID,'void',3,46)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7fc93704f3f0> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(VOID,'void',3,46)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7fc93701b518>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7fc93701b518> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(VOID,'void',3,46)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { Modifiers VOID . LexToken(IDENTIFIER,'newmain',3,51)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7fc93704f4e0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'newmain',3,51)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7fc93704f4e0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'newmain',3,51)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7fc93704f4e0> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'newmain',3,51)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,58)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['newmain'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7fc9370372d0> ('newmain')
   yacc.py: 337:
   yacc.py: 338:State  : 75
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,58)
   yacc.py: 366:Action : Shift and goto state 172
   yacc.py: 337:
   yacc.py: 338:State  : 172
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(),')',3,59)
   yacc.py: 366:Action : Shift and goto state 253
   yacc.py: 337:
   yacc.py: 338:State  : 253
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ) . LexToken({,'{',3,61)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( )] with ['newmain','(',')'] and goto state 68
   yacc.py: 423:Result : <dict @ 0x7fc9365c3168> ({'name': 'newmain', 'plist': []})
   yacc.py: 337:
   yacc.py: 338:State  : 185
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,61)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',4,69)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',4,73)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7fc9386cd788> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',4,73)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7fc9386cd788> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',4,73)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7fc9386cd788> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',4,73)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',4,75)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7fc938801670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 229
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',4,75)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7fc9365c2c58> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',4,75)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7fc9365c2c58>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',4,75)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IDENTIFIER,'System',6,84)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7fc9365c1b40> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 338
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IDENTIFIER,'System',6,84)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7fc9365c3e88> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IDENTIFIER,'System',6,84)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7fc9365c3e88> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',6,84)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7fc9365c17f8> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',6,84)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',6,90)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7fc93704f480> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',6,90)
   yacc.py: 366:Action : Shift and goto state 242
   yacc.py: 337:
   yacc.py: 338:State  : 242
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',6,91)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',6,94)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7fc93704f510> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',6,94)
   yacc.py: 366:Action : Shift and goto state 242
   yacc.py: 337:
   yacc.py: 338:State  : 242
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',6,95)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',6,102)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7fc9386d9928> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',6,102)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7fc9386d9928>] and goto state 166
   yacc.py: 423:Result : <str @ 0x7fc9386d9928> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',6,102)
   yacc.py: 366:Action : Shift and goto state 213
   yacc.py: 337:
   yacc.py: 338:State  : 213
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"Hello World"',6,103)
   yacc.py: 366:Action : Shift and goto state 165
   yacc.py: 337:
   yacc.py: 338:State  : 165
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with ['"Hello World"'] and goto state 153
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 163
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7fc9365c1b40>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7fc9365c1b40>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7fc9365c1b40>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7fc9365c1b40>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 284
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',6,116)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7fc9365c1b40>] and goto state 170
   yacc.py: 423:Result : <dict @ 0x7fc9365c1b40> ({'type': 'String', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 283
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',6,116)
   yacc.py: 366:Action : Shift and goto state 328
   yacc.py: 337:
   yacc.py: 338:State  : 328
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7fc9386d9928>,'(',<dict @ 0x7fc9365c1b40>,')'] and goto state 162
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 110
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 149
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7fc9365c8050>] and goto state 140
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7fc9365c8050>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7fc9365c8050>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7fc9365c8050>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7fc9365c8050>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7fc9365c8050>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7fc9365c8050>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7fc9365c8050>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7fc9365c8050>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7fc9365c8050>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7fc9365c8050>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7fc9365c8050>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7fc9365c8050>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7fc9365c8050>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7fc9365c8050>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7fc9365c8050>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7fc9365c8050>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7fc9365c8050>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7fc9365c8050>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7fc9365c8050>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',6,117)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7fc9365c8050>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7fc9365c8050> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',6,117)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',7,123)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7fc9365c1b40> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',7,123)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7fc9365c8050>,';',{'instr': 2}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7fc9365c2c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',7,123)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7fc9365c2c58>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7fc9365c2c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',7,123)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7fc9365c17f8>,<dict @ 0x7fc9365c2c58>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7fc9365c3e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',7,123)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(PUBLIC,'public',9,130)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7fc9365c3e88>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7fc9365c3e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 177
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator Block . LexToken(PUBLIC,'public',9,130)
   yacc.py: 389:Action : Reduce rule [MethodBody -> Block] with [<dict @ 0x7fc9365c3e88>] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7fc9365c3e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 260
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(PUBLIC,'public',9,130)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7fc93701b518>,'void',<dict @ 0x7fc9365c3168>,<dict @ 0x7fc9365c3e88>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7fc9365c6280> ({'type': 'void', 'method': {'name': 'new ...)
   yacc.py: 337:
   yacc.py: 338:State  : 55
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(PUBLIC,'public',9,130)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7fc9365c6280>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7fc9365c6280> ({'type': 'void', 'method': {'name': 'new ...)
   yacc.py: 337:
   yacc.py: 338:State  : 67
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(PUBLIC,'public',9,130)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7fc9365c6280>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7fc9365c6280> ({'type': 'void', 'method': {'name': 'new ...)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(PUBLIC,'public',9,130)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7fc9365c6280>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7fc9365c6280> ({'type': 'void', 'method': {'name': 'new ...)
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(PUBLIC,'public',9,130)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations PUBLIC . LexToken(STATIC,'static',9,137)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7fc93704f480> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifier . LexToken(STATIC,'static',9,137)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7fc93701b5f0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers . LexToken(STATIC,'static',9,137)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers STATIC . LexToken(VOID,'void',9,144)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7fc93704f450> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers Modifier . LexToken(VOID,'void',9,144)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7fc93701b5f0>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7fc93701b5f0> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 57
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers . LexToken(VOID,'void',9,144)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers VOID . LexToken(IDENTIFIER,'main',9,149)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7fc93704f420> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',9,149)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7fc93704f420> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeName . LexToken(IDENTIFIER,'main',9,149)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7fc93704f420> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',9,149)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',9,153)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7fc93704f480> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 75
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',9,153)
   yacc.py: 366:Action : Shift and goto state 172
   yacc.py: 337:
   yacc.py: 338:State  : 172
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',9,154)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',9,160)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7fc93704f5d0> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',9,160)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7fc93704f5d0> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',9,160)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',9,161)
   yacc.py: 366:Action : Shift and goto state 178
   yacc.py: 337:
   yacc.py: 338:State  : 178
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',9,163)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 190
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',9,163)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [None] and goto state 188
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',9,163)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',None] and goto state 3
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 181
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',9,163)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',9,167)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7fc93704f510> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 257
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',9,167)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [None,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7fc9365c17f8> ({'type': None, 'name': 'args'})
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',9,167)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7fc9365c17f8>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7fc93701b878> (['type', 'name'])
   yacc.py: 337:
   yacc.py: 338:State  : 254
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',9,167)
   yacc.py: 366:Action : Shift and goto state 319
   yacc.py: 337:
   yacc.py: 338:State  : 319
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',9,169)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7fc93701b878>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7fc9365c2910> ({'name': 'main', 'plist': ['type', 'name ...)
   yacc.py: 337:
   yacc.py: 338:State  : 185
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',9,169)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',10,177)
   yacc.py: 366:Action : Shift and goto state 62
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'a',10,181)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7fc9386cdb48> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'a',10,181)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7fc9386cdb48> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'a',10,181)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7fc9386cdb48> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 134
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'a',10,181)
   yacc.py: 366:Action : Shift and goto state 77
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(;,';',10,183)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['a'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7fc938801670> ('a')
   yacc.py: 337:
   yacc.py: 338:State  : 229
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(;,';',10,183)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['a'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'name': 'a'})
   yacc.py: 337:
   yacc.py: 338:State  : 78
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(;,';',10,183)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7fc9365c2280>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7fc9365c4050> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',10,183)
   yacc.py: 366:Action : Shift and goto state 301
   yacc.py: 337:
   yacc.py: 338:State  : 301
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IF,'if',11,191)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7fc9365c0a28> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 338
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IF,'if',11,191)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 90
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 156
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IF,'if',11,191)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 88
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 124
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IF,'if',11,191)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 86
   yacc.py: 423:Result : <dict @ 0x7fc9365c06e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IF,'if',11,191)
   yacc.py: 366:Action : Shift and goto state 164
   yacc.py: 337:
   yacc.py: 338:State  : 164
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF . LexToken((,'(',11,193)
   yacc.py: 366:Action : Shift and goto state 249
   yacc.py: 337:
   yacc.py: 338:State  : 249
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( . LexToken(INT_LITERAL,'1',11,194)
   yacc.py: 366:Action : Shift and goto state 148
   yacc.py: 337:
   yacc.py: 338:State  : 148
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( INT_LITERAL . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 150
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Integer_LIT . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7fc9365c2280>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ComplexPrimary . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7fc9365c2280>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( NotJustName . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7fc9365c2280>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( PrimaryExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7fc9365c2280>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( PostfixExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7fc9365c2280>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( LogicalUnaryExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7fc9365c2280>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( UnaryExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7fc9365c2280>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( CastExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7fc9365c2280>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( MultiplicativeExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7fc9365c2280>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AdditiveExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7fc9365c2280>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ShiftExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7fc9365c2280>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( RelationalExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7fc9365c2280>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( EqualityExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7fc9365c2280>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AndExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7fc9365c2280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ExclusiveOrExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7fc9365c2280>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( InclusiveOrExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7fc9365c2280>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalAndExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7fc9365c2280>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalOrExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7fc9365c2280>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( ConditionalExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7fc9365c2280>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( AssignmentExpression . LexToken(),')',11,195)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7fc9365c2280>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7fc9365c2280> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression . LexToken(),')',11,195)
   yacc.py: 366:Action : Shift and goto state 344
   yacc.py: 337:
   yacc.py: 338:State  : 344
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) . LexToken({,'{',11,196)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 110
   yacc.py: 462:Result : <dict @ 0x7fc9365c0398> ({'instr': 1})
   yacc.py: 337:
   yacc.py: 338:State  : 357
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch . LexToken({,'{',11,196)
   yacc.py: 366:Action : Shift and goto state 68
   yacc.py: 337:
   yacc.py: 338:State  : 68
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { . LexToken(},'}',13,213)
   yacc.py: 366:Action : Shift and goto state 167
   yacc.py: 337:
   yacc.py: 338:State  : 167
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch { } . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 389:Action : Reduce rule [Block -> { }] with ['{','}'] and goto state 85
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Block . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7fc9365c0d70> ({'instr': 1})
   yacc.py: 337:
   yacc.py: 338:State  : 211
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Block M_instr . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [{},{'instr': 1}] and goto state 97
   yacc.py: 423:Result : <dict @ 0x7fc9365c0050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 364
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IF ( Expression ) M_instr_branch Statement . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 389:Action : Reduce rule [SelectionStatement -> IF ( Expression ) M_instr_branch Statement] with ['if','(',<dict @ 0x7fc9365c2280>,')',{'instr': 1},<dict @ 0x7fc9365c0050>] and goto state 105
   yacc.py: 423:Result : <dict @ 0x7fc9365bf910> ({'beginLoop': [], 'endOfLoop': [], 'nLis ...)
   yacc.py: 337:
   yacc.py: 338:State  : 112
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7fc9365c1168> ({'instr': 1})
   yacc.py: 337:
   yacc.py: 338:State  : 208
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements SelectionStatement M_instr . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 389:Action : Reduce rule [Statement -> SelectionStatement M_instr] with [<dict @ 0x7fc9365bf910>,{'instr': 1}] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7fc9365bf280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7fc9365bf280>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7fc9365bf280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7fc9365c06e0>,<dict @ 0x7fc9365bf280>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7fc9365c1e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'System',14,221)
   yacc.py: 366:Action : Shift and goto state 96
   yacc.py: 337:
   yacc.py: 338:State  : 96
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(.,'.',14,227)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['System'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7fc93704f540> ('System')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',14,227)
   yacc.py: 366:Action : Shift and goto state 242
   yacc.py: 337:
   yacc.py: 338:State  : 242
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'out',14,228)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken(.,'.',14,231)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System','.','out'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7fc93704f4b0> ('System.out')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(.,'.',14,231)
   yacc.py: 366:Action : Shift and goto state 242
   yacc.py: 337:
   yacc.py: 338:State  : 242
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . . LexToken(IDENTIFIER,'println',14,232)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . IDENTIFIER . LexToken((,'(',14,239)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> QualifiedName . IDENTIFIER] with ['System.out','.','println'] and goto state 33
   yacc.py: 423:Result : <str @ 0x7fc9386d9928> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken((,'(',14,239)
   yacc.py: 389:Action : Reduce rule [MethodAccess -> QualifiedName] with [<str @ 0x7fc9386d9928>] and goto state 166
   yacc.py: 423:Result : <str @ 0x7fc9386d9928> ('System.out.println')
   yacc.py: 337:
   yacc.py: 338:State  : 119
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess . LexToken((,'(',14,239)
   yacc.py: 366:Action : Shift and goto state 213
   yacc.py: 337:
   yacc.py: 338:State  : 213
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( . LexToken(STRING_LITERAL,'"Hello World"',14,240)
   yacc.py: 366:Action : Shift and goto state 165
   yacc.py: 337:
   yacc.py: 338:State  : 165
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( STRING_LITERAL . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [String_LIT -> STRING_LITERAL] with ['"Hello World"'] and goto state 153
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 163
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( String_LIT . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> String_LIT] with [<dict @ 0x7fc9365c1168>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ComplexPrimary . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7fc9365c1168>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( NotJustName . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7fc9365c1168>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( PrimaryExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7fc9365c1168>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( PostfixExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7fc9365c1168>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( LogicalUnaryExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7fc9365c1168>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( UnaryExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7fc9365c1168>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( CastExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7fc9365c1168>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( MultiplicativeExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7fc9365c1168>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( AdditiveExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7fc9365c1168>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ShiftExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7fc9365c1168>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( RelationalExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7fc9365c1168>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( EqualityExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7fc9365c1168>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( AndExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7fc9365c1168>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ExclusiveOrExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7fc9365c1168>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( InclusiveOrExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7fc9365c1168>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalAndExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7fc9365c1168>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalOrExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7fc9365c1168>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ConditionalExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7fc9365c1168>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( AssignmentExpression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7fc9365c1168>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 284
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( Expression . LexToken(),')',14,253)
   yacc.py: 389:Action : Reduce rule [ArgumentList -> Expression] with [<dict @ 0x7fc9365c1168>] and goto state 170
   yacc.py: 423:Result : <dict @ 0x7fc9365c1168> ({'type': 'String', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 283
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList . LexToken(),')',14,253)
   yacc.py: 366:Action : Shift and goto state 328
   yacc.py: 337:
   yacc.py: 338:State  : 328
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodAccess ( ArgumentList ) . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [MethodCall -> MethodAccess ( ArgumentList )] with [<str @ 0x7fc9386d9928>,'(',<dict @ 0x7fc9365c1168>,')'] and goto state 162
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 110
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MethodCall . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ComplexPrimaryNoParenthesis -> MethodCall] with [None] and goto state 149
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 107
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ComplexPrimaryNoParenthesis . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> ComplexPrimaryNoParenthesis] with [<dict @ 0x7fc9365c46e0>] and goto state 140
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 126
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ComplexPrimary . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7fc9365c46e0>] and goto state 139
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 159
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements NotJustName . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7fc9365c46e0>] and goto state 136
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 191
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 197
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 162
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 142
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 203
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 151
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements CastExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 204
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements MultiplicativeExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 140
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AdditiveExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 211
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 157
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ShiftExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 121
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements RelationalExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 106
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements EqualityExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 221
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 93
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AndExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExclusiveOrExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 225
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 143
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements InclusiveOrExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 227
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 100
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ConditionalAndExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 229
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ConditionalOrExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 141
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ConditionalExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 235
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7fc9365c46e0>] and goto state 239
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',14,254)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7fc9365c46e0>] and goto state 104
   yacc.py: 423:Result : <dict @ 0x7fc9365c46e0> ({'type': 'unknown', 'val': None})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',14,254)
   yacc.py: 366:Action : Shift and goto state 187
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',15,260)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 98
   yacc.py: 462:Result : <dict @ 0x7fc9365c1168> ({'instr': 3})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',15,260)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7fc9365c46e0>,';',{'instr': 3}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7fc9365c2c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 92
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',15,260)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7fc9365c2c58>] and goto state 89
   yacc.py: 423:Result : <dict @ 0x7fc9365c2c58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 245
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',15,260)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7fc9365c1e88>,<dict @ 0x7fc9365c2c58>] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7fc9365c06e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',15,260)
   yacc.py: 366:Action : Shift and goto state 246
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',17,263)
   yacc.py: 389:Action : Reduce rule [Block -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7fc9365c06e0>,'}'] and goto state 84
   yacc.py: 423:Result : <dict @ 0x7fc9365c06e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 177
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator Block . LexToken(},'}',17,263)
   yacc.py: 389:Action : Reduce rule [MethodBody -> Block] with [<dict @ 0x7fc9365c06e0>] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7fc9365c06e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 260
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',17,263)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7fc93701b5f0>,'void',<dict @ 0x7fc9365c2910>,<dict @ 0x7fc9365c06e0>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7fc9365bf910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 55
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations MethodDeclaration . LexToken(},'}',17,263)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7fc9365bf910>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7fc9365bf910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 67
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations FieldDeclaration . LexToken(},'}',17,263)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7fc9365bf910>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7fc9365bf910> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations FieldDeclarationOptSemi . LexToken(},'}',17,263)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi] with [<dict @ 0x7fc9365c6280>,<dict @ 0x7fc9365bf910>] and goto state 46
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',17,263)
   yacc.py: 366:Action : Shift and goto state 86
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations }] with [<dict @ 0x7fc9365c6910>,'{',None,'}'] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x936be0> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x936be0> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

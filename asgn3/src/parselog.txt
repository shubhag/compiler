   yacc.py: 292:PLY: PARSE DEBUG START
   yacc.py: 337:
   yacc.py: 338:State  : 0
   yacc.py: 352:Stack  : . LexToken(PUBLIC,'public',1,0)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : PUBLIC . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f503efec450> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : Modifier . LexToken(CLASS,'class',1,7)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f503efefef0> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 8
   yacc.py: 352:Stack  : Modifiers . LexToken(CLASS,'class',1,7)
   yacc.py: 366:Action : Shift and goto state 6
   yacc.py: 337:
   yacc.py: 338:State  : 6
   yacc.py: 352:Stack  : Modifiers CLASS . LexToken(IDENTIFIER,'Loop',1,13)
   yacc.py: 389:Action : Reduce rule [ClassWord -> CLASS] with ['class'] and goto state 43
   yacc.py: 423:Result : <str @ 0x7f503efec480> ('class')
   yacc.py: 337:
   yacc.py: 338:State  : 24
   yacc.py: 352:Stack  : Modifiers ClassWord . LexToken(IDENTIFIER,'Loop',1,13)
   yacc.py: 366:Action : Shift and goto state 37
   yacc.py: 337:
   yacc.py: 338:State  : 37
   yacc.py: 352:Stack  : Modifiers ClassWord IDENTIFIER . LexToken({,'{',1,18)
   yacc.py: 389:Action : Reduce rule [ClassHeader -> Modifiers ClassWord IDENTIFIER] with [<list @ 0x7f503efefef0>,'class','Loop'] and goto state 36
   yacc.py: 423:Result : <dict @ 0x7f50406c64b0> ({'class': 'class', 'id': 'Loop', 'mod':  ...)
   yacc.py: 337:
   yacc.py: 338:State  : 17
   yacc.py: 352:Stack  : ClassHeader . LexToken({,'{',1,18)
   yacc.py: 366:Action : Shift and goto state 33
   yacc.py: 337:
   yacc.py: 338:State  : 33
   yacc.py: 352:Stack  : ClassHeader { . LexToken(PUBLIC,'public',3,25)
   yacc.py: 366:Action : Shift and goto state 19
   yacc.py: 337:
   yacc.py: 338:State  : 19
   yacc.py: 352:Stack  : ClassHeader { PUBLIC . LexToken(STATIC,'static',3,32)
   yacc.py: 389:Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 40
   yacc.py: 423:Result : <str @ 0x7f503efec690> ('public')
   yacc.py: 337:
   yacc.py: 338:State  : 12
   yacc.py: 352:Stack  : ClassHeader { Modifier . LexToken(STATIC,'static',3,32)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifier] with ['public'] and goto state 38
   yacc.py: 423:Result : <list @ 0x7f503efefe18> (['p', 'u', 'b', 'l', 'i', 'c'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(STATIC,'static',3,32)
   yacc.py: 366:Action : Shift and goto state 3
   yacc.py: 337:
   yacc.py: 338:State  : 3
   yacc.py: 352:Stack  : ClassHeader { Modifiers STATIC . LexToken(VOID,'void',3,39)
   yacc.py: 389:Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 42
   yacc.py: 423:Result : <str @ 0x7f503efec5d0> ('static')
   yacc.py: 337:
   yacc.py: 338:State  : 25
   yacc.py: 352:Stack  : ClassHeader { Modifiers Modifier . LexToken(VOID,'void',3,39)
   yacc.py: 389:Action : Reduce rule [Modifiers -> Modifiers Modifier] with [<list @ 0x7f503efefe18>,'static'] and goto state 39
   yacc.py: 423:Result : <list @ 0x7f503efefe18> (['p', 'u', 'b', 'l', 'i', 'c', 'static'])
   yacc.py: 337:
   yacc.py: 338:State  : 58
   yacc.py: 352:Stack  : ClassHeader { Modifiers . LexToken(VOID,'void',3,39)
   yacc.py: 366:Action : Shift and goto state 44
   yacc.py: 337:
   yacc.py: 338:State  : 44
   yacc.py: 352:Stack  : ClassHeader { Modifiers VOID . LexToken(IDENTIFIER,'main',3,44)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> VOID] with ['void'] and goto state 16
   yacc.py: 423:Result : <str @ 0x7f503efec600> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 46
   yacc.py: 352:Stack  : ClassHeader { Modifiers PrimitiveType . LexToken(IDENTIFIER,'main',3,44)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['void'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f503efec600> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeName . LexToken(IDENTIFIER,'main',3,44)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['void'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f503efec600> ('void')
   yacc.py: 337:
   yacc.py: 338:State  : 166
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier . LexToken(IDENTIFIER,'main',3,44)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier IDENTIFIER . LexToken((,'(',3,48)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['main'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f503efec690> ('main')
   yacc.py: 337:
   yacc.py: 338:State  : 77
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName . LexToken((,'(',3,48)
   yacc.py: 366:Action : Shift and goto state 174
   yacc.py: 337:
   yacc.py: 338:State  : 174
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( . LexToken(IDENTIFIER,'String',3,49)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( IDENTIFIER . LexToken([,'[',3,55)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['String'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f503efec630> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 52
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( QualifiedName . LexToken([,'[',3,55)
   yacc.py: 389:Action : Reduce rule [TypeName -> QualifiedName] with ['String'] and goto state 5
   yacc.py: 423:Result : <str @ 0x7f503efec630> ('String')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName . LexToken([,'[',3,55)
   yacc.py: 366:Action : Shift and goto state 81
   yacc.py: 337:
   yacc.py: 338:State  : 81
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ . LexToken(],']',3,56)
   yacc.py: 366:Action : Shift and goto state 180
   yacc.py: 337:
   yacc.py: 338:State  : 180
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName [ ] . LexToken(IDENTIFIER,'args',3,58)
   yacc.py: 389:Action : Reduce rule [OP_DIM -> [ ]] with ['[',']'] and goto state 195
   yacc.py: 423:Result : <int @ 0xaa7158> (1)
   yacc.py: 337:
   yacc.py: 338:State  : 82
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName OP_DIM . LexToken(IDENTIFIER,'args',3,58)
   yacc.py: 389:Action : Reduce rule [Dims -> OP_DIM] with [1] and goto state 193
   yacc.py: 423:Result : <int @ 0xaa7158> (1)
   yacc.py: 337:
   yacc.py: 338:State  : 83
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeName Dims . LexToken(IDENTIFIER,'args',3,58)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName Dims] with ['String',1] and goto state 3
   yacc.py: 423:Result : <str @ 0x7f504067f7d8> ('array_String_1')
   yacc.py: 337:
   yacc.py: 338:State  : 248
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier . LexToken(IDENTIFIER,'args',3,58)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier IDENTIFIER . LexToken(),')',3,62)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['args'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f503efec6f0> ('args')
   yacc.py: 337:
   yacc.py: 338:State  : 317
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( TypeSpecifier DeclaratorName . LexToken(),')',3,62)
   yacc.py: 389:Action : Reduce rule [Parameter -> TypeSpecifier DeclaratorName] with [<str @ 0x7f504067f7d8>,'args'] and goto state 71
   yacc.py: 423:Result : <dict @ 0x7f503ef7c050> ({'type': 'array_String_1', 'name': 'args ...)
   yacc.py: 337:
   yacc.py: 338:State  : 247
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( Parameter . LexToken(),')',3,62)
   yacc.py: 389:Action : Reduce rule [ParameterList -> Parameter] with [<dict @ 0x7f503ef7c050>] and goto state 69
   yacc.py: 423:Result : <list @ 0x7f504064b878> ([{'type': 'array_String_1', 'name': 'arg ...)
   yacc.py: 337:
   yacc.py: 338:State  : 258
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList . LexToken(),')',3,62)
   yacc.py: 366:Action : Shift and goto state 324
   yacc.py: 337:
   yacc.py: 338:State  : 324
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier DeclaratorName ( ParameterList ) . LexToken({,'{',3,64)
   yacc.py: 389:Action : Reduce rule [MethodDeclarator -> DeclaratorName ( ParameterList )] with ['main','(',<list @ 0x7f504064b878>,')'] and goto state 67
   yacc.py: 423:Result : <dict @ 0x7f503ef7c5c8> ({'name': 'main', 'plist': [{'type': 'arr ...)
   yacc.py: 337:
   yacc.py: 338:State  : 252
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator . LexToken({,'{',3,64)
   yacc.py: 366:Action : Shift and goto state 179
   yacc.py: 337:
   yacc.py: 338:State  : 179
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { . LexToken(INT,'int',4,70)
   yacc.py: 366:Action : Shift and goto state 64
   yacc.py: 337:
   yacc.py: 338:State  : 64
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { INT . LexToken(IDENTIFIER,'sum',4,74)
   yacc.py: 389:Action : Reduce rule [PrimitiveType -> INT] with ['int'] and goto state 12
   yacc.py: 423:Result : <str @ 0x7f5040670b70> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 86
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { PrimitiveType . LexToken(IDENTIFIER,'sum',4,74)
   yacc.py: 389:Action : Reduce rule [TypeName -> PrimitiveType] with ['int'] and goto state 4
   yacc.py: 423:Result : <str @ 0x7f5040670b70> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 53
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeName . LexToken(IDENTIFIER,'sum',4,74)
   yacc.py: 389:Action : Reduce rule [TypeSpecifier -> TypeName] with ['int'] and goto state 2
   yacc.py: 423:Result : <str @ 0x7f5040670b70> ('int')
   yacc.py: 337:
   yacc.py: 338:State  : 130
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier . LexToken(IDENTIFIER,'sum',4,74)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier IDENTIFIER . LexToken(,,',',4,77)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['sum'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f5040670be8> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 224
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier DeclaratorName . LexToken(,,',',4,77)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['sum'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'name': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 80
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarator . LexToken(,,',',4,77)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarator] with [<dict @ 0x7f503ef7c910>] and goto state 57
   yacc.py: 423:Result : <dict @ 0x7f503ef74398> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(,,',',4,77)
   yacc.py: 366:Action : Shift and goto state 173
   yacc.py: 337:
   yacc.py: 338:State  : 173
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , . LexToken(IDENTIFIER,'i',4,78)
   yacc.py: 366:Action : Shift and goto state 79
   yacc.py: 337:
   yacc.py: 338:State  : 79
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , IDENTIFIER . LexToken(;,';',4,79)
   yacc.py: 389:Action : Reduce rule [DeclaratorName -> IDENTIFIER] with ['i'] and goto state 72
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 224
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , DeclaratorName . LexToken(;,';',4,79)
   yacc.py: 389:Action : Reduce rule [VariableDeclarator -> DeclaratorName] with ['i'] and goto state 59
   yacc.py: 423:Result : <dict @ 0x7f503ef7cb40> ({'type': 'int', 'name': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 256
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators , VariableDeclarator . LexToken(;,';',4,79)
   yacc.py: 389:Action : Reduce rule [VariableDeclarators -> VariableDeclarators , VariableDeclarator] with [{'type': 'int'},',',<dict @ 0x7f503ef7cb40>] and goto state 58
   yacc.py: 423:Result : <dict @ 0x7f503ef7cd70> ({'type': 'int'})
   yacc.py: 337:
   yacc.py: 338:State  : 223
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators . LexToken(;,';',4,79)
   yacc.py: 366:Action : Shift and goto state 299
   yacc.py: 337:
   yacc.py: 338:State  : 299
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; . LexToken(IDENTIFIER,'sum',5,85)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef74e88> ({'instr': 0})
   yacc.py: 337:
   yacc.py: 338:State  : 345
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { TypeSpecifier VariableDeclarators ; M_instr . LexToken(IDENTIFIER,'sum',5,85)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ; M_instr] with ['int',{'type': 'int'},';',{'instr': 0}] and goto state 95
   yacc.py: 423:Result : <dict @ 0x7f503ef744b0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 152
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationStatement . LexToken(IDENTIFIER,'sum',5,85)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement] with [{}] and goto state 93
   yacc.py: 423:Result : <dict @ 0x7f503ef744b0> ({})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'sum',5,85)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [{}] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f503ef74398> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'sum',5,85)
   yacc.py: 366:Action : Shift and goto state 91
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',5,89)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['sum'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f5040670c38> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',5,89)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['sum'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f5040670c38> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',5,89)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['sum'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f5040670c38> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',5,89)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['sum'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f5040670c38> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',5,89)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['sum'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f5040670c38> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',5,89)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(INT_LITERAL,'0',5,91)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 242
   yacc.py: 423:Result : <str @ 0x7f50406e7fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 230
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'0',5,91)
   yacc.py: 366:Action : Shift and goto state 144
   yacc.py: 337:
   yacc.py: 338:State  : 144
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['0'] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f503ef7c910>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f503ef7c910>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f503ef7c910>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f503ef7c910>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f503ef7c910>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f503ef7c910>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f503ef7c910>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f503ef7c910>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f503ef7c910>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f503ef7c910>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f503ef7c910>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f503ef7c910>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f503ef7c910>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f503ef7c910>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f503ef7c910>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f503ef7c910>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f503ef7c910>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f503ef7c910>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f503ef7c910>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t0'})
   yacc.py: 337:
   yacc.py: 338:State  : 305
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['sum','=',<dict @ 0x7f503ef7c910>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',5,92)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f503ef7cc58>] and goto state 109
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',5,92)
   yacc.py: 366:Action : Shift and goto state 182
   yacc.py: 337:
   yacc.py: 338:State  : 182
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(IDENTIFIER,'i',6,98)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef7e168> ({'instr': 2})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(IDENTIFIER,'i',6,98)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f503ef7cc58>,';',{'instr': 2}] and goto state 98
   yacc.py: 423:Result : <dict @ 0x7f503ef74e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(IDENTIFIER,'i',6,98)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f503ef74e88>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f503ef74e88> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'i',6,98)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f503ef74398>,<dict @ 0x7f503ef74e88>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'i',6,98)
   yacc.py: 366:Action : Shift and goto state 91
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',6,100)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['i'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',6,100)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['i'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',6,100)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['i'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',6,100)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['i'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',6,100)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['i'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',6,100)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(INT_LITERAL,'1',6,102)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 242
   yacc.py: 423:Result : <str @ 0x7f50406e7fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 230
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(INT_LITERAL,'1',6,102)
   yacc.py: 366:Action : Shift and goto state 144
   yacc.py: 337:
   yacc.py: 338:State  : 144
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator INT_LITERAL . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator Integer_LIT . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f503ef7cc58>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ComplexPrimary . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f503ef7cc58>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator NotJustName . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f503ef7cc58>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f503ef7cc58>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'type': 'int', 'tempVar': '_t1'})
   yacc.py: 337:
   yacc.py: 338:State  : 305
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['i','=',<dict @ 0x7f503ef7cc58>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7f503ef7ca28> ({'type': 'int', 'tempVar': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f503ef7ca28>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f503ef7ca28> ({'type': 'int', 'tempVar': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',6,103)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f503ef7ca28>] and goto state 109
   yacc.py: 423:Result : <dict @ 0x7f503ef7ca28> ({'type': 'int', 'tempVar': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',6,103)
   yacc.py: 366:Action : Shift and goto state 182
   yacc.py: 337:
   yacc.py: 338:State  : 182
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(WHILE,'while',7,109)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef74e88> ({'instr': 4})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(WHILE,'while',7,109)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f503ef7ca28>,';',{'instr': 4}] and goto state 98
   yacc.py: 423:Result : <dict @ 0x7f503ef744b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(WHILE,'while',7,109)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f503ef744b0>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f503ef744b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(WHILE,'while',7,109)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f503ef7c910>,<dict @ 0x7f503ef744b0>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7f503ef7cc58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(WHILE,'while',7,109)
   yacc.py: 366:Action : Shift and goto state 127
   yacc.py: 337:
   yacc.py: 338:State  : 127
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE . LexToken((,'(',7,114)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 115
   yacc.py: 462:Result : <dict @ 0x7f503ef7cb40> ({'instr': 4})
   yacc.py: 337:
   yacc.py: 338:State  : 221
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch . LexToken((,'(',7,114)
   yacc.py: 366:Action : Shift and goto state 293
   yacc.py: 337:
   yacc.py: 338:State  : 293
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( . LexToken(IDENTIFIER,'i',7,115)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( IDENTIFIER . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['i'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( QualifiedName . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['i'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( PrimaryExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['i'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( PostfixExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['i'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( LogicalUnaryExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['i'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( UnaryExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['i'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( CastExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['i'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( MultiplicativeExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['i'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( AdditiveExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with ['i'] and goto state 216
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ShiftExpression . LexToken(<,'<',7,116)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with ['i'] and goto state 218
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression . LexToken(<,'<',7,116)
   yacc.py: 366:Action : Shift and goto state 210
   yacc.py: 337:
   yacc.py: 338:State  : 210
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < . LexToken(INT_LITERAL,'50',7,117)
   yacc.py: 366:Action : Shift and goto state 144
   yacc.py: 337:
   yacc.py: 338:State  : 144
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < INT_LITERAL . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['50'] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < Integer_LIT . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f503ef7c910>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < ComplexPrimary . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f503ef7c910>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < NotJustName . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f503ef7c910>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < PrimaryExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f503ef7c910>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < PostfixExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f503ef7c910>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < LogicalUnaryExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f503ef7c910>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 197
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < UnaryExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f503ef7c910>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < CastExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f503ef7c910>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < MultiplicativeExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with [<dict @ 0x7f503ef7c910>] and goto state 213
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < AdditiveExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f503ef7c910>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f503ef7c910> ({'type': 'int', 'tempVar': '_t2'})
   yacc.py: 337:
   yacc.py: 338:State  : 285
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression < ShiftExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> RelationalExpression < ShiftExpression] with ['i','<',<dict @ 0x7f503ef7c910>] and goto state 219
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( RelationalExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f503ef7e280>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( EqualityExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f503ef7e280>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( AndExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f503ef7e280>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ExclusiveOrExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f503ef7e280>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( InclusiveOrExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f503ef7e280>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ConditionalAndExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f503ef7e280>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ConditionalOrExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f503ef7e280>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( ConditionalExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f503ef7e280>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( AssignmentExpression . LexToken(),')',7,119)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f503ef7e280>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f503ef7e280> ({'trueList': [6], 'falseList': [7], 'typ ...)
   yacc.py: 337:
   yacc.py: 338:State  : 339
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression . LexToken(),')',7,119)
   yacc.py: 391:Action : Reduce rule [Mark_switch -> <empty>] with [] and goto state 113
   yacc.py: 462:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 359
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch . LexToken(),')',7,119)
   yacc.py: 366:Action : Shift and goto state 370
   yacc.py: 337:
   yacc.py: 338:State  : 370
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) . LexToken({,'{',8,125)
   yacc.py: 391:Action : Reduce rule [M_instr_branch -> <empty>] with [] and goto state 115
   yacc.py: 462:Result : <dict @ 0x7f503ef7e5c8> ({'instr': 8})
   yacc.py: 337:
   yacc.py: 338:State  : 377
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch . LexToken({,'{',8,125)
   yacc.py: 366:Action : Shift and goto state 70
   yacc.py: 337:
   yacc.py: 338:State  : 70
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch { . LexToken(IDENTIFIER,'sum',9,135)
   yacc.py: 389:Action : Reduce rule [Lparen -> {] with ['{'] and goto state 89
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 54
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen . LexToken(IDENTIFIER,'sum',9,135)
   yacc.py: 366:Action : Shift and goto state 91
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen IDENTIFIER . LexToken(=,'=',9,139)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['sum'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f5040670dc8> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen QualifiedName . LexToken(=,'=',9,139)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['sum'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f5040670dc8> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen PrimaryExpression . LexToken(=,'=',9,139)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['sum'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f5040670dc8> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen PostfixExpression . LexToken(=,'=',9,139)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['sum'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f5040670dc8> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LogicalUnaryExpression . LexToken(=,'=',9,139)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['sum'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f5040670dc8> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression . LexToken(=,'=',9,139)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression = . LexToken(IDENTIFIER,'sum',9,141)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 242
   yacc.py: 423:Result : <str @ 0x7f50406e7fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 230
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator . LexToken(IDENTIFIER,'sum',9,141)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator IDENTIFIER . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['sum'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator QualifiedName . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['sum'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator PrimaryExpression . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['sum'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator PostfixExpression . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['sum'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['sum'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator UnaryExpression . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['sum'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator CastExpression . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['sum'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(+,'+',9,145)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['sum'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f5040670e18> ('sum')
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression . LexToken(+,'+',9,145)
   yacc.py: 366:Action : Shift and goto state 228
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + . LexToken(IDENTIFIER,'i',9,147)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + IDENTIFIER . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['i'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + QualifiedName . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['i'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + PrimaryExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['i'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + PostfixExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['i'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + LogicalUnaryExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['i'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 197
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + UnaryExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['i'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + CastExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['i'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 303
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression + MultiplicativeExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> AdditiveExpression + MultiplicativeExpression] with ['sum','+','i'] and goto state 214
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f503ef7e6e0>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'type': 'int', 'tempVar': '_t5'})
   yacc.py: 337:
   yacc.py: 338:State  : 305
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['sum','=',<dict @ 0x7f503ef7e6e0>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7f503ef7ee88> ({'type': 'int', 'tempVar': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen AssignmentExpression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f503ef7ee88>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f503ef7ee88> ({'type': 'int', 'tempVar': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen Expression . LexToken(;,';',9,148)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f503ef7ee88>] and goto state 109
   yacc.py: 423:Result : <dict @ 0x7f503ef7ee88> ({'type': 'int', 'tempVar': 'sum'})
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen ExpressionStatement . LexToken(;,';',9,148)
   yacc.py: 366:Action : Shift and goto state 182
   yacc.py: 337:
   yacc.py: 338:State  : 182
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen ExpressionStatement ; . LexToken(IDENTIFIER,'i',10,158)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef85280> ({'instr': 10})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen ExpressionStatement ; M_instr . LexToken(IDENTIFIER,'i',10,158)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f503ef7ee88>,';',{'instr': 10}] and goto state 98
   yacc.py: 423:Result : <dict @ 0x7f503ef7ec58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen Statement . LexToken(IDENTIFIER,'i',10,158)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f503ef7ec58>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f503ef7ec58> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 120
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationOrStatement . LexToken(IDENTIFIER,'i',10,158)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement] with [<dict @ 0x7f503ef7ec58>] and goto state 91
   yacc.py: 423:Result : <dict @ 0x7f503ef7e6e0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements . LexToken(IDENTIFIER,'i',10,158)
   yacc.py: 366:Action : Shift and goto state 91
   yacc.py: 337:
   yacc.py: 338:State  : 91
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements IDENTIFIER . LexToken(=,'=',10,160)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['i'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 150
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements QualifiedName . LexToken(=,'=',10,160)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['i'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements PrimaryExpression . LexToken(=,'=',10,160)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['i'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements PostfixExpression . LexToken(=,'=',10,160)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['i'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements LogicalUnaryExpression . LexToken(=,'=',10,160)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['i'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression . LexToken(=,'=',10,160)
   yacc.py: 366:Action : Shift and goto state 232
   yacc.py: 337:
   yacc.py: 338:State  : 232
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression = . LexToken(IDENTIFIER,'i',10,162)
   yacc.py: 389:Action : Reduce rule [AssignmentOperator -> =] with ['='] and goto state 242
   yacc.py: 423:Result : <str @ 0x7f50406e7fd0> ('=')
   yacc.py: 337:
   yacc.py: 338:State  : 230
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator . LexToken(IDENTIFIER,'i',10,162)
   yacc.py: 366:Action : Shift and goto state 23
   yacc.py: 337:
   yacc.py: 338:State  : 23
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator IDENTIFIER . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [QualifiedName -> IDENTIFIER] with ['i'] and goto state 32
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 187
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator QualifiedName . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> QualifiedName] with ['i'] and goto state 140
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PrimaryExpression . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with ['i'] and goto state 196
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator PostfixExpression . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with ['i'] and goto state 202
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator LogicalUnaryExpression . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with ['i'] and goto state 201
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 138
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator UnaryExpression . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with ['i'] and goto state 208
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator CastExpression . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with ['i'] and goto state 209
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 103
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator MultiplicativeExpression . LexToken(+,'+',10,164)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> MultiplicativeExpression] with ['i'] and goto state 213
   yacc.py: 423:Result : <str @ 0x7f50407c1a80> ('i')
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(+,'+',10,164)
   yacc.py: 366:Action : Shift and goto state 228
   yacc.py: 337:
   yacc.py: 338:State  : 228
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + . LexToken(INT_LITERAL,'1',10,166)
   yacc.py: 366:Action : Shift and goto state 144
   yacc.py: 337:
   yacc.py: 338:State  : 144
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + INT_LITERAL . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [Integer_LIT -> INT_LITERAL] with ['1'] and goto state 155
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 90
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + Integer_LIT . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ComplexPrimary -> Integer_LIT] with [<dict @ 0x7f503ef7ed70>] and goto state 146
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 122
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + ComplexPrimary . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [NotJustName -> ComplexPrimary] with [<dict @ 0x7f503ef7ed70>] and goto state 144
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 155
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + NotJustName . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [PrimaryExpression -> NotJustName] with [<dict @ 0x7f503ef7ed70>] and goto state 141
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 131
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + PrimaryExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [PostfixExpression -> PrimaryExpression] with [<dict @ 0x7f503ef7ed70>] and goto state 196
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 123
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + PostfixExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [LogicalUnaryExpression -> PostfixExpression] with [<dict @ 0x7f503ef7ed70>] and goto state 202
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 158
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + LogicalUnaryExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [UnaryExpression -> LogicalUnaryExpression] with [<dict @ 0x7f503ef7ed70>] and goto state 201
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 197
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + UnaryExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [CastExpression -> UnaryExpression] with [<dict @ 0x7f503ef7ed70>] and goto state 208
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 147
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + CastExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [MultiplicativeExpression -> CastExpression] with [<dict @ 0x7f503ef7ed70>] and goto state 209
   yacc.py: 423:Result : <dict @ 0x7f503ef7ed70> ({'type': 'int', 'tempVar': '_t6'})
   yacc.py: 337:
   yacc.py: 338:State  : 303
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression + MultiplicativeExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [AdditiveExpression -> AdditiveExpression + MultiplicativeExpression] with ['i','+',<dict @ 0x7f503ef7ed70>] and goto state 214
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 136
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AdditiveExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ShiftExpression -> AdditiveExpression] with [<dict @ 0x7f503ef854b0>] and goto state 216
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 153
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ShiftExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [RelationalExpression -> ShiftExpression] with [<dict @ 0x7f503ef854b0>] and goto state 218
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 117
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator RelationalExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [EqualityExpression -> RelationalExpression] with [<dict @ 0x7f503ef854b0>] and goto state 223
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 101
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator EqualityExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [AndExpression -> EqualityExpression] with [<dict @ 0x7f503ef854b0>] and goto state 226
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 88
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AndExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ExclusiveOrExpression -> AndExpression] with [<dict @ 0x7f503ef854b0>] and goto state 228
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 116
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ExclusiveOrExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [InclusiveOrExpression -> ExclusiveOrExpression] with [<dict @ 0x7f503ef854b0>] and goto state 230
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 139
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator InclusiveOrExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ConditionalAndExpression -> InclusiveOrExpression] with [<dict @ 0x7f503ef854b0>] and goto state 232
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 95
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalAndExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ConditionalOrExpression -> ConditionalAndExpression] with [<dict @ 0x7f503ef854b0>] and goto state 234
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 133
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalOrExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ConditionalExpression -> ConditionalOrExpression] with [<dict @ 0x7f503ef854b0>] and goto state 237
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 137
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator ConditionalExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> ConditionalExpression] with [<dict @ 0x7f503ef854b0>] and goto state 240
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'type': 'int', 'tempVar': '_t7'})
   yacc.py: 337:
   yacc.py: 338:State  : 305
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements UnaryExpression AssignmentOperator AssignmentExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression] with ['i','=',<dict @ 0x7f503ef854b0>] and goto state 241
   yacc.py: 423:Result : <dict @ 0x7f503ef85398> ({'type': 'int', 'tempVar': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 108
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements AssignmentExpression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [Expression -> AssignmentExpression] with [<dict @ 0x7f503ef85398>] and goto state 244
   yacc.py: 423:Result : <dict @ 0x7f503ef85398> ({'type': 'int', 'tempVar': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 135
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements Expression . LexToken(;,';',10,167)
   yacc.py: 389:Action : Reduce rule [ExpressionStatement -> Expression] with [<dict @ 0x7f503ef85398>] and goto state 109
   yacc.py: 423:Result : <dict @ 0x7f503ef85398> ({'type': 'int', 'tempVar': 'i'})
   yacc.py: 337:
   yacc.py: 338:State  : 85
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements ExpressionStatement . LexToken(;,';',10,167)
   yacc.py: 366:Action : Shift and goto state 182
   yacc.py: 337:
   yacc.py: 338:State  : 182
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; . LexToken(},'}',11,173)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef855c8> ({'instr': 13})
   yacc.py: 337:
   yacc.py: 338:State  : 263
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements ExpressionStatement ; M_instr . LexToken(},'}',11,173)
   yacc.py: 389:Action : Reduce rule [Statement -> ExpressionStatement ; M_instr] with [<dict @ 0x7f503ef85398>,';',{'instr': 13}] and goto state 98
   yacc.py: 423:Result : <dict @ 0x7f503ef85050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',11,173)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f503ef85050>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f503ef85050> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',11,173)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f503ef7e6e0>,<dict @ 0x7f503ef85050>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 154
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements . LexToken(},'}',11,173)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements } . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [Rparen -> }] with ['}'] and goto state 90
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 240
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Lparen LocalVariableDeclarationsAndStatements Rparen . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [Block -> Lparen LocalVariableDeclarationsAndStatements Rparen] with [None,<dict @ 0x7f503ef854b0>,None] and goto state 87
   yacc.py: 423:Result : <dict @ 0x7f503ef854b0> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 113
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Block . LexToken(},'}',13,177)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef7e7f8> ({'instr': 13})
   yacc.py: 337:
   yacc.py: 338:State  : 206
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Block M_instr . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [Statement -> Block M_instr] with [<dict @ 0x7f503ef854b0>,{'instr': 13}] and goto state 102
   yacc.py: 423:Result : <dict @ 0x7f503ef85280> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 383
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Statement . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [IterationStatement -> WHILE M_instr_branch ( Expression Mark_switch ) M_instr_branch Statement] with ['while',{'instr': 4},'(',<dict @ 0x7f503ef7e280>,None,')',{'instr': 8},<dict @ 0x7f503ef85280>] and goto state 116
   yacc.py: 423:Result : <dict @ 0x7f503ef7e398> ({'nList': [7]})
   yacc.py: 337:
   yacc.py: 338:State  : 164
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement . LexToken(},'}',13,177)
   yacc.py: 391:Action : Reduce rule [M_instr -> <empty>] with [] and goto state 103
   yacc.py: 462:Result : <dict @ 0x7f503ef7e050> ({'instr': 14})
   yacc.py: 337:
   yacc.py: 338:State  : 246
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements IterationStatement M_instr . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [Statement -> IterationStatement M_instr] with [{'nList': [7]},{'instr': 14}] and goto state 100
   yacc.py: 423:Result : <dict @ 0x7f503ef85168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 87
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements Statement . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationOrStatement -> Statement] with [<dict @ 0x7f503ef85168>] and goto state 94
   yacc.py: 423:Result : <dict @ 0x7f503ef85168> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 241
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement . LexToken(},'}',13,177)
   yacc.py: 389:Action : Reduce rule [LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement] with [<dict @ 0x7f503ef7cc58>,<dict @ 0x7f503ef85168>] and goto state 92
   yacc.py: 423:Result : <dict @ 0x7f503ef7cd70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 261
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements . LexToken(},'}',13,177)
   yacc.py: 366:Action : Shift and goto state 325
   yacc.py: 337:
   yacc.py: 338:State  : 325
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator { LocalVariableDeclarationsAndStatements } . LexToken(},'}',14,179)
   yacc.py: 389:Action : Reduce rule [MethodBody -> { LocalVariableDeclarationsAndStatements }] with ['{',<dict @ 0x7f503ef7cd70>,'}'] and goto state 74
   yacc.py: 423:Result : <dict @ 0x7f503ef7cd70> ({'beginLoop': [], 'endOfLoop': []})
   yacc.py: 337:
   yacc.py: 338:State  : 320
   yacc.py: 352:Stack  : ClassHeader { Modifiers TypeSpecifier MethodDeclarator MethodBody . LexToken(},'}',14,179)
   yacc.py: 389:Action : Reduce rule [MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody] with [<list @ 0x7f503efefe18>,'void',<dict @ 0x7f503ef7c5c8>,<dict @ 0x7f503ef7cd70>] and goto state 65
   yacc.py: 423:Result : <dict @ 0x7f503ef74d70> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 56
   yacc.py: 352:Stack  : ClassHeader { MethodDeclaration . LexToken(},'}',14,179)
   yacc.py: 389:Action : Reduce rule [FieldDeclaration -> MethodDeclaration] with [<dict @ 0x7f503ef74d70>] and goto state 50
   yacc.py: 423:Result : <dict @ 0x7f503ef74d70> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 69
   yacc.py: 352:Stack  : ClassHeader { FieldDeclaration . LexToken(},'}',14,179)
   yacc.py: 389:Action : Reduce rule [FieldDeclarationOptSemi -> FieldDeclaration] with [<dict @ 0x7f503ef74d70>] and goto state 47
   yacc.py: 423:Result : <dict @ 0x7f503ef74d70> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 62
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarationOptSemi . LexToken(},'}',14,179)
   yacc.py: 389:Action : Reduce rule [FieldDeclarations -> FieldDeclarationOptSemi] with [<dict @ 0x7f503ef74d70>] and goto state 45
   yacc.py: 423:Result : <dict @ 0x7f503ef74d70> ({'type': 'void', 'method': {'name': 'mai ...)
   yacc.py: 337:
   yacc.py: 338:State  : 60
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations . LexToken(},'}',14,179)
   yacc.py: 366:Action : Shift and goto state 71
   yacc.py: 337:
   yacc.py: 338:State  : 71
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations } . $end
   yacc.py: 389:Action : Reduce rule [Rparen -> }] with ['}'] and goto state 90
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 168
   yacc.py: 352:Stack  : ClassHeader { FieldDeclarations Rparen . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclaration -> ClassHeader { FieldDeclarations Rparen] with [<dict @ 0x7f50406c64b0>,'{',<dict @ 0x7f503ef74d70>,None] and goto state 34
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 2
   yacc.py: 352:Stack  : TypeDeclaration . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarationOptSemi -> TypeDeclaration] with [None] and goto state 26
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 7
   yacc.py: 352:Stack  : TypeDeclarationOptSemi . $end
   yacc.py: 389:Action : Reduce rule [TypeDeclarations -> TypeDeclarationOptSemi] with [None] and goto state 24
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 16
   yacc.py: 352:Stack  : TypeDeclarations . $end
   yacc.py: 389:Action : Reduce rule [ProgramFile -> TypeDeclarations] with [None] and goto state 22
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 1
   yacc.py: 352:Stack  : ProgramFile . $end
   yacc.py: 389:Action : Reduce rule [CompilationUnit -> ProgramFile] with [None] and goto state 1
   yacc.py: 423:Result : <NoneType @ 0x920190> (None)
   yacc.py: 337:
   yacc.py: 338:State  : 13
   yacc.py: 352:Stack  : CompilationUnit . $end
   yacc.py: 484:Done   : Returning <NoneType @ 0x920190> (None)
   yacc.py: 485:PLY: PARSE DEBUG END

CompilationUnit -> ProgramFile
None
ProgramFile -> TypeDeclarations
None
TypeDeclarations -> TypeDeclarationOptSemi
None
TypeDeclarationOptSemi -> TypeDeclaration
None
TypeDeclaration -> ClassHeader { FieldDeclarations }
None,'{',None,'}'
FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi
None,None
FieldDeclarationOptSemi -> FieldDeclaration
None
FieldDeclaration -> MethodDeclaration
None
MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody
None,None,None,None
MethodBody -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> JumpStatement
None
JumpStatement -> RETURN Expression ;
'return',None,';'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'min'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> SelectionStatement M_instr
None,None
M_instr -> <empty>

SelectionStatement -> IF ( Expression ) Statement ELSE Statement
'if','(',None,')',None,'else',None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'n1'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'min'
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'n2'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'min'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> RelationalExpression > ShiftExpression
None,'>',None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'n2'
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'n1'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName
None
DeclaratorName -> IDENTIFIER
'min'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
MethodDeclarator -> DeclaratorName ( ParameterList )
None,'(',None,')'
ParameterList -> ParameterList , Parameter
None,',',None
Parameter -> TypeSpecifier DeclaratorName
None,None
DeclaratorName -> IDENTIFIER
'n2'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
ParameterList -> Parameter
None
Parameter -> TypeSpecifier DeclaratorName
None,None
DeclaratorName -> IDENTIFIER
'n1'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
DeclaratorName -> IDENTIFIER
'minFunction'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
Modifiers -> Modifiers Modifier
None,None
Modifier -> STATIC
'static'
Modifiers -> Modifier
None
Modifier -> PUBLIC
'public'
FieldDeclarations -> FieldDeclarationOptSemi
None
FieldDeclarationOptSemi -> FieldDeclaration
None
FieldDeclaration -> MethodDeclaration
None
MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody
None,None,None,None
MethodBody -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'c'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8aea0>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> ArgumentList , Expression
None,',',None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
MethodAccess -> QualifiedName
None
QualifiedName -> IDENTIFIER
'minFunction'
DeclaratorName -> IDENTIFIER
'c'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'm'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbc82e070>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression
None,None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'm'
LogicalUnaryOperator -> ~
'~'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'm'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'0'
DeclaratorName -> IDENTIFIER
'm'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> BOOLEAN
'boolean'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'c'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbc82e170>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression
None,None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'c'
LogicalUnaryOperator -> ~
'~'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'c'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'c'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8adf8>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression
None,'^',None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
DeclaratorName -> IDENTIFIER
'c'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'24'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'45'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbc82e170>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression
None,'?',None,':',None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'30'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'20'
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ( Expression )
'(',None,')'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> EqualityExpression OP_EQ RelationalExpression
None,'==',None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'1'
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression - MultiplicativeExpression
None,'-',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'12'
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> MultiplicativeExpression * CastExpression
None,'*',None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'2'
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'3'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'7'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8adf8>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression
None,'?',None,':',None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'30'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'20'
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ( Expression )
'(',None,')'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> EqualityExpression OP_EQ RelationalExpression
None,'==',None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'1'
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'b'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'10'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarators , VariableDeclarator
None,',',None
VariableDeclarator -> DeclaratorName
None
DeclaratorName -> IDENTIFIER
'b'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName
None
DeclaratorName -> IDENTIFIER
'a'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'grade'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8adf8>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> SelectionStatement M_instr
None,None
M_instr -> <empty>

SelectionStatement -> SWITCH ( Expression ) Block
'switch','(',None,')',None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8adf8>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> LabelStatement
None
LabelStatement -> DEFAULT :
'default',':'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> JumpStatement
None
JumpStatement -> BREAK ;
'break',';'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8adf8>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> LabelStatement
None
LabelStatement -> CASE ConstantExpression :
'case',None,':'
ConstantExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> CHAR_LITERAL
"'F'"
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"You passed"'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> LabelStatement
None
LabelStatement -> CASE ConstantExpression :
'case',None,':'
ConstantExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> CHAR_LITERAL
"'D'"
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> JumpStatement
None
JumpStatement -> BREAK ;
'break',';'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"Well done"'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> LabelStatement
None
LabelStatement -> CASE ConstantExpression :
'case',None,':'
ConstantExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> CHAR_LITERAL
"'C'"
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> LabelStatement
None
LabelStatement -> CASE ConstantExpression :
'case',None,':'
ConstantExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> CHAR_LITERAL
"'B'"
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> JumpStatement
None
JumpStatement -> BREAK ;
'break',';'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"Excellent!"'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> LabelStatement
None
LabelStatement -> CASE ConstantExpression :
'case',None,':'
ConstantExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> CHAR_LITERAL
"'A'"
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'grade'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> CHAR_LITERAL
"'C'"
DeclaratorName -> IDENTIFIER
'grade'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> CHAR
'char'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> IterationStatement
None
IterationStatement -> DO Statement WHILE ( Expression ) ;
'do',None,'while','(',None,')',';'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> RelationalExpression < ShiftExpression
None,'<',None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'5'
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'i'
Statement -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> RealPostfixExpression
None
RealPostfixExpression -> PostfixExpression OPT_INC_DEC
None,'++'
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'i'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'i'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"i is : "'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'0'
DeclaratorName -> IDENTIFIER
'i'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> IterationStatement
None
IterationStatement -> FOR ( ForInit ForExpr ForIncr ) Statement
'for','(',None,None,None,')',None
Statement -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"........ "'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> ArrayAccess
None
ArrayAccess -> QualifiedName [ Expression ]
None,'[',None,']'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'i'
QualifiedName -> IDENTIFIER
'myList'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','println'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
ForIncr -> ExpressionStatements
None
ExpressionStatements -> ExpressionStatement
None
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> RealPostfixExpression
None
RealPostfixExpression -> PostfixExpression OPT_INC_DEC
None,'++'
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'i'
ForExpr -> Expression ;
None,';'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> RelationalExpression < ShiftExpression
None,'<',None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','length'
QualifiedName -> IDENTIFIER
'myList'
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'i'
ForInit -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'0'
DeclaratorName -> IDENTIFIER
'i'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> { ArrayInitializers }
'{',None,'}'
ArrayInitializers -> ArrayInitializers , VariableInitializer
None,',',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> FLOAT_LITERAL
'3.15'
ArrayInitializers -> ArrayInitializers , VariableInitializer
None,',',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> FLOAT_LITERAL
'3.14'
ArrayInitializers -> ArrayInitializers , VariableInitializer
None,',',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> FLOAT_LITERAL
'2.19'
ArrayInitializers -> VariableInitializer
None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> FLOAT_LITERAL
'1.91'
DeclaratorName -> IDENTIFIER
'list'
TypeSpecifier -> TypeName Dims
None,None
Dims -> OP_DIM
None
OP_DIM -> [ ]
'[',']'
TypeName -> PrimitiveType
None
PrimitiveType -> DOUBLE
'double'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> IterationStatement
None
IterationStatement -> FOR ( ForInit ForExpr ForIncr ) Statement
'for','(',None,None,None,')',None
Statement -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"\\n"'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','print'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'z'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8adf8>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','print'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
ForIncr -> ExpressionStatements
None
ExpressionStatements -> ExpressionStatement
None
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'1'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'z'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'z'
ForExpr -> Expression ;
None,';'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> RelationalExpression < ShiftExpression
None,'<',None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'120'
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'z'
ForInit -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'10'
DeclaratorName -> IDENTIFIER
'z'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> SelectionStatement M_instr
None,None
M_instr -> <empty>

SelectionStatement -> IF ( Expression ) Statement ELSE Statement
'if','(',None,')',None,'else',None
Statement -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8f830>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','print'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
Statement -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8f930>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','print'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> EqualityExpression OP_EQ RelationalExpression
None,'==',None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'10'
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'y'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'10'
DeclaratorName -> IDENTIFIER
'y'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> IterationStatement
None
IterationStatement -> WHILE ( Expression ) Statement
'while','(',None,')',None
Statement -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
<str @ 0x7f0bbce8f630>
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','print'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> RealPostfixExpression
None
RealPostfixExpression -> PostfixExpression OPT_INC_DEC
None,'++'
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'x'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( ArgumentList )
None,'(',None,')'
ArgumentList -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
None,'+',None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'x'
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> STRING_LITERAL
'"x : "'
MethodAccess -> QualifiedName
None
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','print'
QualifiedName -> QualifiedName . IDENTIFIER
None,'.','out'
QualifiedName -> IDENTIFIER
'System'
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> RelationalExpression < ShiftExpression
None,'<',None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'13'
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'x'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement
None
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;
None,None,';'
VariableDeclarators -> VariableDeclarator
None
VariableDeclarator -> DeclaratorName = VariableInitializer
None,'=',None
VariableInitializer -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'10'
DeclaratorName -> IDENTIFIER
'x'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
MethodDeclarator -> DeclaratorName ( ParameterList )
None,'(',None,')'
ParameterList -> Parameter
None
Parameter -> TypeSpecifier DeclaratorName
None,None
DeclaratorName -> DeclaratorName OP_DIM
None,None
OP_DIM -> [ ]
'[',']'
DeclaratorName -> IDENTIFIER
'args'
TypeSpecifier -> TypeName
None
TypeName -> QualifiedName
None
QualifiedName -> IDENTIFIER
'String'
DeclaratorName -> IDENTIFIER
'main'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> VOID
'void'
Modifiers -> Modifiers Modifier
None,None
Modifier -> STATIC
'static'
Modifiers -> Modifier
None
Modifier -> PUBLIC
'public'
ClassHeader -> Modifiers ClassWord IDENTIFIER
None,None,'testing'
ClassWord -> CLASS
'class'
Modifiers -> Modifier
None
Modifier -> PUBLIC
'public'

CompilationUnit -> ProgramFile
None
ProgramFile -> TypeDeclarations
None
TypeDeclarations -> TypeDeclarationOptSemi
None
TypeDeclarationOptSemi -> TypeDeclaration
None
TypeDeclaration -> ClassHeader { FieldDeclarations }
None,'{',None,'}'
FieldDeclarations -> FieldDeclarationOptSemi
None
FieldDeclarationOptSemi -> FieldDeclaration
None
FieldDeclaration -> MethodDeclaration
None
MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody
None,None,None,None
MethodBody -> Block
None
Block -> { LocalVariableDeclarationsAndStatements }
'{',None,'}'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement
None,None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> MethodCall
None
MethodCall -> MethodAccess ( )
None,'(',')'
MethodAccess -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement
None
LocalVariableDeclarationOrStatement -> Statement
None
Statement -> ExpressionStatement ;
None,';'
ExpressionStatement -> Expression
None
Expression -> AssignmentExpression
None
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
None,None,None
AssignmentExpression -> ConditionalExpression
None
ConditionalExpression -> ConditionalOrExpression
None
ConditionalOrExpression -> ConditionalAndExpression
None
ConditionalAndExpression -> InclusiveOrExpression
None
InclusiveOrExpression -> ExclusiveOrExpression
None
ExclusiveOrExpression -> AndExpression
None
AndExpression -> EqualityExpression
None
EqualityExpression -> RelationalExpression
None
RelationalExpression -> ShiftExpression
None
ShiftExpression -> AdditiveExpression
None
AdditiveExpression -> MultiplicativeExpression
None
MultiplicativeExpression -> CastExpression
None
CastExpression -> UnaryExpression
None
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> NotJustName
None
NotJustName -> ComplexPrimary
None
ComplexPrimary -> ComplexPrimaryNoParenthesis
None
ComplexPrimaryNoParenthesis -> INT_LITERAL
'1'
AssignmentOperator -> =
'='
UnaryExpression -> LogicalUnaryExpression
None
LogicalUnaryExpression -> PostfixExpression
None
PostfixExpression -> PrimaryExpression
None
PrimaryExpression -> QualifiedName
None
QualifiedName -> IDENTIFIER
'a'
MethodDeclarator -> DeclaratorName ( )
None,'(',')'
DeclaratorName -> IDENTIFIER
'hello'
TypeSpecifier -> TypeName
None
TypeName -> PrimitiveType
None
PrimitiveType -> INT
'int'
Modifiers -> Modifier
None
Modifier -> PUBLIC
'public'
ClassHeader -> Modifiers ClassWord IDENTIFIER
None,None,'employee'
ClassWord -> CLASS
'class'
Modifiers -> Modifier
None
Modifier -> PUBLIC
'public'
